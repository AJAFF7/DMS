{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import BackButton from'./Backbutton';import DeletePersonal from'./delettions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const DFP1=()=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(true);const[updateId,setUpdateId]=useState(null);const[updateData,setUpdateData]=useState({quantity:'',price:'',dameg:'',timestamp:''});const navigate=useNavigate();useEffect(()=>{if(!localStorage.getItem('userID')){navigate('/');}},[navigate]);useEffect(()=>{fetchData();},[]);// Fetch data on mount\nconst fetchData=async()=>{try{const response=await fetch('/auth/personal1',{method:'GET'});if(response.ok){const responseData=await response.json();setData(responseData.data);setLoading(false);}else{console.error('Error fetching data:',response.statusText);}}catch(error){console.error('Error fetching data:',error);}};const handlePrint=()=>{window.print();};const goTo=()=>{navigate('/Fetchalldata1');};const handleUpdate=id=>{setUpdateId(id);const selectedItem=data.find(item=>item._id===id);setUpdateData({quantity:selectedItem.quantity,price:selectedItem.price,dameg:selectedItem.dameg,timestamp:selectedItem.timestamp});};const cancelUpdate=()=>{setUpdateId(null);setUpdateData({quantity:'',price:'',dameg:'',timestamp:''});};const updatePersonalItem=async()=>{try{const response=await fetch(\"/auth/personal1/\".concat(updateId),{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify(updateData)});if(response.ok){// Refresh data after updating\nfetchData();// Reset update state\ncancelUpdate();}else{console.error('Error updating data:',response.statusText);}}catch(error){console.error('Error updating data:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BackButton,{}),/*#__PURE__*/_jsx(\"button\",{className:\"buttons\",onClick:goTo,children:\"Total\"}),/*#__PURE__*/_jsx(\"button\",{className:\"buttons\",onClick:handlePrint,children:\"Print\"}),/*#__PURE__*/_jsx(DeletePersonal,{}),loading?/*#__PURE__*/_jsxs(\"p\",{className:\"server-m\",children:[\"Server is not running ....\",' ',/*#__PURE__*/_jsx(\"p\",{className:\"loading-ani-server\"})]}):/*#__PURE__*/_jsx(\"div\",{children:data&&data.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"_id\"}),/*#__PURE__*/_jsx(\"th\",{children:\"pername\"}),/*#__PURE__*/_jsx(\"th\",{children:\"quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"dameg\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map(i=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:i._id}),/*#__PURE__*/_jsx(\"td\",{children:i.pername}),/*#__PURE__*/_jsx(\"td\",{children:updateId===i._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:i.quantity,value:updateData.quantity,onChange:e=>setUpdateData({...updateData,quantity:e.target.value})}):i.quantity}),/*#__PURE__*/_jsx(\"td\",{children:updateId===i._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:i.price,value:updateData.price,onChange:e=>setUpdateData({...updateData,price:e.target.value})}):i.price}),/*#__PURE__*/_jsx(\"td\",{children:updateId===i._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:i.dameg,value:updateData.dameg,onChange:e=>setUpdateData({...updateData,dameg:e.target.value})}):i.dameg}),/*#__PURE__*/_jsx(\"td\",{children:updateId===i._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:i.timestamp,value:updateData.timestamp,onChange:e=>setUpdateData({...updateData,timestamp:e.target.value})}):i.timestamp}),/*#__PURE__*/_jsx(\"td\",{children:updateId===i._id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"update-ch1\",onClick:updatePersonalItem,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"update-ch2\",onClick:cancelUpdate,children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{className:\"update\",onClick:()=>handleUpdate(i._id),children:\"Update\"})})]},i._id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No data available\"})})]});};export default DFP1;// import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// import BarChart from './BarChart';\n// // import Personal_1_logout from './Personal-1-logout';\n// import BackButton from './Backbutton';\n// import Weather from './Weather';\n// import DeletePersonal from './delettions';\n// import UpdatePersonal from './update';\n// export default function DFP1() {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Define loading state\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     if (!localStorage.getItem('userID')) {\n//       navigate('/');\n//     }\n//   });\n//   useEffect(() => {\n//     fetch('/auth/personal1', {\n//       method: 'GET',\n//     })\n//       .then((res) => res.json())\n//       .then((responseData) => {\n//         console.log(responseData, 'userData');\n//         setData(responseData.data); // Assuming 'data' is the array you want to display\n//         setLoading(false); // Set loading to false once data is fetched\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []);\n//   const handlePrint = () => {\n//     window.print(); // Invoking browser's print dialog\n//   };\n//   const goTo = () => {\n//     navigate('/Fetchalldata1'); // This function takes you back to the previous page in the history stack\n//   };\n//   return (\n//     <div>\n//       {/* <button className=\"navbutton\">\n//       <Link className='navbutton' to=\"/home1\">\n//           Back\n//         </Link>\n//       </button> <span /> */}\n//        <BackButton />\n//        <button className='buttons' onClick={goTo}> Total </button>\n//       <button className='buttons' onClick={handlePrint}>Print</button> <span />\n//       <DeletePersonal />\n//       <UpdatePersonal />\n//       <Weather />\n//       {/* <Personal_1_logout /> */}\n//           <div>  \n//       <div>\n//         {loading ? (\n//             <p className='server-m'>Server is not running ....  <p className='loading-ani-server'></p></p>\n//         ) : (\n//           <div>\n//             <h3 className='totl-data'>Received Data:</h3>\n//             {data && data.length > 0 ? (\n//               <table className=\"data-table\" border=\"\">\n//                 <thead>\n//                   <tr> <th>_id</th>\n//                     <th>pername</th>\n//                     <th>quantity</th>\n//                     <th>price</th>\n//                     <th>dameg</th>\n//                     <th>Timestamp</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {data.map((i) => (\n//                     <tr key={i._id}>\n//                       <td>{i._id}</td>\n//                       <td>{i.pername}</td>\n//                       <td>{i.quantity}</td>\n//                       <td>{i.price}</td>\n//                       <td>{i.dameg}</td>\n//                       <td>{i.timestamp}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             ) : (\n//               <p> No data available</p>\n//             )}\n//           </div>\n//         )}\n//         <BarChart data={data} />\n//       </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BackButton","DeletePersonal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DFP1","data","setData","loading","setLoading","updateId","setUpdateId","updateData","setUpdateData","quantity","price","dameg","timestamp","navigate","localStorage","getItem","fetchData","response","fetch","method","ok","responseData","json","console","error","statusText","handlePrint","window","print","goTo","handleUpdate","id","selectedItem","find","item","_id","cancelUpdate","updatePersonalItem","concat","headers","body","JSON","stringify","children","className","onClick","length","map","i","pername","type","placeholder","value","onChange","e","target"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/DFP1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './Backbutton';\nimport DeletePersonal from './delettions';\n\n\nconst DFP1 = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updateId, setUpdateId] = useState(null);\n  const [updateData, setUpdateData] = useState({\n    quantity: '',\n    price: '',\n    dameg: '',\n    timestamp: '',\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!localStorage.getItem('userID')) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Fetch data on mount\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/auth/personal1', {\n        method: 'GET',\n      });\n\n      if (response.ok) {\n        const responseData = await response.json();\n        setData(responseData.data);\n        setLoading(false);\n      } else {\n        console.error('Error fetching data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const goTo = () => {\n    navigate('/Fetchalldata1');\n  };\n\n  const handleUpdate = (id) => {\n    setUpdateId(id);\n    const selectedItem = data.find((item) => item._id === id);\n    setUpdateData({\n      quantity: selectedItem.quantity,\n      price: selectedItem.price,\n      dameg: selectedItem.dameg,\n      timestamp: selectedItem.timestamp,\n    });\n  };\n\n  const cancelUpdate = () => {\n    setUpdateId(null);\n    setUpdateData({\n      quantity: '',\n      price: '',\n      dameg: '',\n      timestamp: '',\n    });\n  };\n\n  const updatePersonalItem = async () => {\n    try {\n      const response = await fetch(`/auth/personal1/${updateId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updateData),\n      });\n\n      if (response.ok) {\n        // Refresh data after updating\n        fetchData();\n\n        // Reset update state\n        cancelUpdate();\n      } else {\n        console.error('Error updating data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <BackButton />\n      <button className='buttons' onClick={goTo}>\n        Total\n      </button>\n\n      <button className='buttons' onClick={handlePrint}>\n        Print\n      </button>\n      <DeletePersonal />\n      {loading ? (\n        <p className='server-m'>\n          Server is not running ....{' '}\n          <p className='loading-ani-server'></p>\n        </p>\n      ) : (\n        <div>\n          {/* <h3 className='totl-data'>Received Data:</h3> */}\n          {data && data.length > 0 ? (\n            <table className='data-table'>\n              <thead>\n                <tr>\n                  <th>_id</th>\n                  <th>pername</th>\n                  <th>quantity</th>\n                  <th>price</th>\n                  <th>dameg</th>\n                  <th>Timestamp</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((i) => (\n                  <tr key={i._id}>\n                    <td>{i._id}</td>\n                    <td>{i.pername}</td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type='text'\n                          placeholder={i.quantity}\n                          value={updateData.quantity}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              quantity: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.quantity\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type='text'\n                          placeholder={i.price}\n                          value={updateData.price}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              price: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.price\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type='text'\n                          placeholder={i.dameg}\n                          value={updateData.dameg}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              dameg: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.dameg\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type='text'\n                          placeholder={i.timestamp}\n                          value={updateData.timestamp}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              timestamp: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.timestamp\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <>\n                          <button className='update-ch1' onClick={updatePersonalItem}>Save</button>\n                          <button className='update-ch2' onClick={cancelUpdate}>Cancel</button>\n                        </>\n                      ) : (\n                        <button className='update' onClick={() => handleUpdate(i._id)}>\n                          Update\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>No data available</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DFP1;\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// import BarChart from './BarChart';\n// // import Personal_1_logout from './Personal-1-logout';\n// import BackButton from './Backbutton';\n// import Weather from './Weather';\n// import DeletePersonal from './delettions';\n// import UpdatePersonal from './update';\n\n// export default function DFP1() {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Define loading state\n\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem('userID')) {\n//       navigate('/');\n   \n//     }\n    \n//   });\n\n//   useEffect(() => {\n//     fetch('/auth/personal1', {\n//       method: 'GET',\n//     })\n//       .then((res) => res.json())\n//       .then((responseData) => {\n//         console.log(responseData, 'userData');\n//         setData(responseData.data); // Assuming 'data' is the array you want to display\n//         setLoading(false); // Set loading to false once data is fetched\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []);\n\n//   const handlePrint = () => {\n//     window.print(); // Invoking browser's print dialog\n//   };\n\n//   const goTo = () => {\n//     navigate('/Fetchalldata1'); // This function takes you back to the previous page in the history stack\n//   };\n\n//   return (\n//     <div>\n      \n//       {/* <button className=\"navbutton\">\n//       <Link className='navbutton' to=\"/home1\">\n//           Back\n//         </Link>\n//       </button> <span /> */}\n//        <BackButton />\n//        <button className='buttons' onClick={goTo}> Total </button>\n\n//       <button className='buttons' onClick={handlePrint}>Print</button> <span />\n//       <DeletePersonal />\n//       <UpdatePersonal />\n//       <Weather />\n//       {/* <Personal_1_logout /> */}\n     \n      \n//           <div>  \n//       <div>\n//         {loading ? (\n//             <p className='server-m'>Server is not running ....  <p className='loading-ani-server'></p></p>\n         \n//         ) : (\n//           <div>\n            \n//             <h3 className='totl-data'>Received Data:</h3>\n//             {data && data.length > 0 ? (\n//               <table className=\"data-table\" border=\"\">\n//                 <thead>\n//                   <tr> <th>_id</th>\n//                     <th>pername</th>\n//                     <th>quantity</th>\n//                     <th>price</th>\n//                     <th>dameg</th>\n//                     <th>Timestamp</th>\n//                   </tr>\n//                 </thead>\n            \n//                 <tbody>\n//                   {data.map((i) => (\n//                     <tr key={i._id}>\n//                       <td>{i._id}</td>\n//                       <td>{i.pername}</td>\n//                       <td>{i.quantity}</td>\n//                       <td>{i.price}</td>\n//                       <td>{i.dameg}</td>\n//                       <td>{i.timestamp}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n                \n//             ) : (\n            \n//               <p> No data available</p>\n//             )}\n            \n//           </div>\n      \n//         )}\n        \n  \n//         <BarChart data={data} />\n\n//       </div>\n//       </div>\n    \n//     </div>\n//   );\n// }\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}