{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n//     if (confirmed) {\n//       try {\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n//         if (response.data.message) {\n//           setMessage(response.data.message);\n//           window.localStorage.removeItem('userID');\n//           localStorage.clear();\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n// export default DeleteAccount;\n// Import necessary dependencies\nimport React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';// Define DeleteAccount component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DeleteAccount=()=>{// State variables\nconst[userId,setUserId]=useState('');const[message,setMessage]=useState('');const navigate=useNavigate();// Fetch stored user ID on component mount\nuseEffect(()=>{const storedUserId=window.localStorage.getItem('userID');if(storedUserId!==null){setUserId(storedUserId);}},[]);// Handle user account deletion\nconst handleDeleteUser=async()=>{const confirmed=window.confirm(\"Are you sure you want to delete your account?\");if(confirmed){try{// Make API call to delete user account\nconst response=await axios.delete(\"/auth/p1-auths/\".concat(userId));// Check if the deletion was successful\nif(response.data.message){setMessage(response.data.message);// Remove userID from local storage\nwindow.localStorage.removeItem('userID');// Navigate to the home page\nnavigate('/');}}catch(error){setMessage(\"Error: \".concat(error.response?error.response.data.message:error.message));}}};// Render component\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"buttons-delete\",onClick:handleDeleteUser,children:\"Delete account\"}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};// Export the component\nexport default DeleteAccount;// import React, { useState } from 'react';\n// import axios from 'axios';\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n// export default DeleteAccount;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","DeleteAccount","userId","setUserId","message","setMessage","navigate","storedUserId","window","localStorage","getItem","handleDeleteUser","confirmed","confirm","response","delete","concat","data","removeItem","error","children","className","onClick"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n    \n//     if (confirmed) {\n//       try {\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n        \n//         if (response.data.message) {\n//           setMessage(response.data.message);\n\n//           window.localStorage.removeItem('userID');\n//           localStorage.clear();\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n\n\n// Import necessary dependencies\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Define DeleteAccount component\nconst DeleteAccount = () => {\n  // State variables\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch stored user ID on component mount\n  useEffect(() => {\n    const storedUserId = window.localStorage.getItem('userID');\n    if (storedUserId !== null) {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  // Handle user account deletion\n  const handleDeleteUser = async () => {\n    const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n    \n    if (confirmed) {\n      try {\n        // Make API call to delete user account\n        const response = await axios.delete(`/auth/p1-auths/${userId}`);\n        \n        // Check if the deletion was successful\n        if (response.data.message) {\n          setMessage(response.data.message);\n\n          // Remove userID from local storage\n          window.localStorage.removeItem('userID');\n\n          // Navigate to the home page\n          navigate('/');\n        }\n      } catch (error) {\n        setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n      }\n    }\n  };\n\n  // Render component\n  return (\n    <div>\n      <button className='buttons-delete' onClick={handleDeleteUser}>\n        Delete account\n      </button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\n// Export the component\nexport default DeleteAccount;\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACA,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAa,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B;AACAF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,YAAY,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC1D,GAAIH,YAAY,GAAK,IAAI,CAAE,CACzBJ,SAAS,CAACI,YAAY,CAAC,CACzB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAI,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAC,SAAS,CAAGJ,MAAM,CAACK,OAAO,CAAC,+CAA+C,CAAC,CAEjF,GAAID,SAAS,CAAE,CACb,GAAI,CACF;AACA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,MAAM,mBAAAC,MAAA,CAAmBd,MAAM,CAAE,CAAC,CAE/D;AACA,GAAIY,QAAQ,CAACG,IAAI,CAACb,OAAO,CAAE,CACzBC,UAAU,CAACS,QAAQ,CAACG,IAAI,CAACb,OAAO,CAAC,CAEjC;AACAI,MAAM,CAACC,YAAY,CAACS,UAAU,CAAC,QAAQ,CAAC,CAExC;AACAZ,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAE,MAAOa,KAAK,CAAE,CACdd,UAAU,WAAAW,MAAA,CAAWG,KAAK,CAACL,QAAQ,CAAGK,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACb,OAAO,CAAGe,KAAK,CAACf,OAAO,CAAE,CAAC,CACtF,CACF,CACF,CAAC,CAED;AACA,mBACEJ,KAAA,QAAAoB,QAAA,eACEtB,IAAA,WAAQuB,SAAS,CAAC,gBAAgB,CAACC,OAAO,CAAEX,gBAAiB,CAAAS,QAAA,CAAC,gBAE9D,CAAQ,CAAC,CACRhB,OAAO,eAAIN,IAAA,MAAAsB,QAAA,CAAIhB,OAAO,CAAI,CAAC,EACzB,CAAC,CAEV,CAAC,CAED;AACA,cAAe,CAAAH,aAAa,CAO5B;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}