{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/DFP1.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   //Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       {/* <BackButton />\n//       <button className=\"buttons\" onClick={goTo}>\n//         Total\n//       </button>\n\n//       <button className=\"buttons\" onClick={handlePrint}>\n//         Print\n//       </button> */}\n//       {/* <DeletePersonal /> */}\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       {/* <div className=\"search-input\">\n\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//       </div> */}\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }} // Adjust padding if needed\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n//           {filteredData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   // Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   // Get the latest 90-day data from filteredData\n//   const latest90DayData = filteredData.filter((item) => {\n//     const today = new Date();\n//     const itemDate = new Date(item.timestamp);\n//     const timeDiff = Math.abs(today - itemDate);\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n//     return daysDiff <= 90;\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }}\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {latest90DayData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {latest90DayData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No matching data found within the last 90 days.</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport BackButton from \"./Backbutton\";\nimport DeletePersonal from \"./delettions\";\nimport home from \"../assets/home.jpg\";\nimport print from \"../assets/print.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DFP1 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updateId, setUpdateId] = useState(null);\n  const [updateData, setUpdateData] = useState({\n    quantity: \"\",\n    price: \"\",\n    dameg: \"\",\n    timestamp: \"\"\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"userID\")) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetchData();\n  }, []); // Fetch data on mount\n\n  useEffect(() => {\n    if (searchQuery.trim() !== \"\") {\n      // Filter data based on search query\n      const searchResult = data.filter(item => Object.values(item).some(value => typeof value === \"string\" && value.toLowerCase().includes(searchQuery.toLowerCase())));\n      setSearchResult(searchResult);\n    } else {\n      setSearchResult([]);\n    }\n  }, [searchQuery, data]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"/auth/personal1\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        setData(responseData.data);\n        setLoading(false);\n      } else {\n        console.error(\"Error fetching data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handlePrint = () => {\n    window.print();\n  };\n  const goTo = () => {\n    navigate(\"/Fetchalldata1\");\n  };\n  const handleUpdate = id => {\n    setUpdateId(id);\n    const selectedItem = data.find(item => item._id === id);\n    setUpdateData({\n      quantity: selectedItem.quantity,\n      price: selectedItem.price,\n      dameg: selectedItem.dameg,\n      timestamp: selectedItem.timestamp\n    });\n  };\n  const cancelUpdate = () => {\n    setUpdateId(null);\n    setUpdateData({\n      quantity: \"\",\n      price: \"\",\n      dameg: \"\",\n      timestamp: \"\"\n    });\n  };\n  const updatePersonalItem = async () => {\n    try {\n      const response = await fetch(`/auth/personal1/${updateId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateData)\n      });\n      if (response.ok) {\n        // Refresh data after updating\n        fetchData();\n\n        // Reset update state\n        cancelUpdate();\n      } else {\n        console.error(\"Error updating data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home1\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"nav-home\",\n              src: home,\n              height: \"25\",\n              width: \"25\",\n              alt: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dfp1\",\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/fetchalldata1\",\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dfp1\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"print\",\n            onClick: handlePrint,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"nav-logout\",\n              src: print,\n              height: \"28\",\n              width: \"28\",\n              alt: \"logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"patched-data\",\n        children: \"Patched Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input\",\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-field\",\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        style: {\n          paddingRight: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"26\",\n        height: \"26\",\n        fill: \"currentColor\",\n        className: \"bi bi-search\",\n        viewBox: \"0 0 16 16\",\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"50%\",\n          transform: \"translateY(-50%)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"server-m\",\n      children: [\"Server is not running .... \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-ani-server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-container-dfp\",\n      children: [/*#__PURE__*/_jsxDEV(DeletePersonal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 11\n      }, this), searchResult.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"pername\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"dameg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: searchResult.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.pername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.quantity,\n                value: updateData.quantity,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  quantity: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 25\n              }, this) : i.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.price,\n                value: updateData.price,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  price: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 25\n              }, this) : i.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.dameg,\n                value: updateData.dameg,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  dameg: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 25\n              }, this) : i.dameg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.timestamp,\n                value: updateData.timestamp,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  timestamp: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 25\n              }, this) : i.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"update-ch1\",\n                  onClick: updatePersonalItem,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"update-ch2\",\n                  onClick: cancelUpdate,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 955,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"update\",\n                onClick: () => handleUpdate(i._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 21\n            }, this)]\n          }, i._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"server-m\",\n          children: [\"Server is not running ....\", \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-ani-server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container-dfp\",\n          children: [/*#__PURE__*/_jsxDEV(DeletePersonal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"data-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"pername\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"dameg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Timestamp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: i._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: i.pername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: i.quantity,\n                    value: updateData.quantity,\n                    onChange: e => setUpdateData({\n                      ...updateData,\n                      quantity: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1002,\n                    columnNumber: 31\n                  }, this) : i.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: i.price,\n                    value: updateData.price,\n                    onChange: e => setUpdateData({\n                      ...updateData,\n                      price: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 31\n                  }, this) : i.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: i.dameg,\n                    value: updateData.dameg,\n                    onChange: e => setUpdateData({\n                      ...updateData,\n                      dameg: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 31\n                  }, this) : i.dameg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: i.timestamp,\n                    value: updateData.timestamp,\n                    onChange: e => setUpdateData({\n                      ...updateData,\n                      timestamp: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 31\n                  }, this) : i.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: updateId === i._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"update-ch1\",\n                      onClick: updatePersonalItem,\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1071,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"update-ch2\",\n                      onClick: cancelUpdate,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1077,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"update\",\n                    onClick: () => handleUpdate(i._id),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1085,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 27\n                }, this)]\n              }, i._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 786,\n    columnNumber: 5\n  }, this);\n};\n_s(DFP1, \"KMd+s8rh+Ffpigd+IYeZP5vuKmE=\", false, function () {\n  return [useNavigate];\n});\n_c = DFP1;\nexport default DFP1;\nvar _c;\n$RefreshReg$(_c, \"DFP1\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","BackButton","DeletePersonal","home","print","jsxDEV","_jsxDEV","Fragment","_Fragment","DFP1","_s","data","setData","loading","setLoading","updateId","setUpdateId","updateData","setUpdateData","quantity","price","dameg","timestamp","searchQuery","setSearchQuery","searchResult","setSearchResult","navigate","localStorage","getItem","fetchData","trim","filter","item","Object","values","some","value","toLowerCase","includes","response","fetch","method","ok","responseData","json","console","error","statusText","handlePrint","window","goTo","handleUpdate","id","selectedItem","find","_id","cancelUpdate","updatePersonalItem","headers","body","JSON","stringify","children","className","to","src","height","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","position","type","placeholder","onChange","e","target","paddingRight","xmlns","fill","viewBox","right","top","transform","d","length","map","i","pername","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/DFP1.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   //Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       {/* <BackButton />\n//       <button className=\"buttons\" onClick={goTo}>\n//         Total\n//       </button>\n\n//       <button className=\"buttons\" onClick={handlePrint}>\n//         Print\n//       </button> */}\n//       {/* <DeletePersonal /> */}\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       {/* <div className=\"search-input\">\n\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//       </div> */}\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }} // Adjust padding if needed\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n//           {filteredData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   // Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   // Get the latest 90-day data from filteredData\n//   const latest90DayData = filteredData.filter((item) => {\n//     const today = new Date();\n//     const itemDate = new Date(item.timestamp);\n//     const timeDiff = Math.abs(today - itemDate);\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n//     return daysDiff <= 90;\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }}\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {latest90DayData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {latest90DayData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No matching data found within the last 90 days.</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport BackButton from \"./Backbutton\";\nimport DeletePersonal from \"./delettions\";\nimport home from \"../assets/home.jpg\";\nimport print from \"../assets/print.png\";\n\nconst DFP1 = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updateId, setUpdateId] = useState(null);\n  const [updateData, setUpdateData] = useState({\n    quantity: \"\",\n    price: \"\",\n    dameg: \"\",\n    timestamp: \"\",\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"userID\")) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Fetch data on mount\n\n  useEffect(() => {\n    if (searchQuery.trim() !== \"\") {\n      // Filter data based on search query\n      const searchResult = data.filter((item) =>\n        Object.values(item).some(\n          (value) =>\n            typeof value === \"string\" &&\n            value.toLowerCase().includes(searchQuery.toLowerCase()),\n        ),\n      );\n      setSearchResult(searchResult);\n    } else {\n      setSearchResult([]);\n    }\n  }, [searchQuery, data]);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"/auth/personal1\", {\n        method: \"GET\",\n      });\n\n      if (response.ok) {\n        const responseData = await response.json();\n        setData(responseData.data);\n        setLoading(false);\n      } else {\n        console.error(\"Error fetching data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const goTo = () => {\n    navigate(\"/Fetchalldata1\");\n  };\n\n  const handleUpdate = (id) => {\n    setUpdateId(id);\n    const selectedItem = data.find((item) => item._id === id);\n    setUpdateData({\n      quantity: selectedItem.quantity,\n      price: selectedItem.price,\n      dameg: selectedItem.dameg,\n      timestamp: selectedItem.timestamp,\n    });\n  };\n\n  const cancelUpdate = () => {\n    setUpdateId(null);\n    setUpdateData({\n      quantity: \"\",\n      price: \"\",\n      dameg: \"\",\n      timestamp: \"\",\n    });\n  };\n\n  const updatePersonalItem = async () => {\n    try {\n      const response = await fetch(`/auth/personal1/${updateId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updateData),\n      });\n\n      if (response.ok) {\n        // Refresh data after updating\n        fetchData();\n\n        // Reset update state\n        cancelUpdate();\n      } else {\n        console.error(\"Error updating data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <ul>\n        <nav className=\"navbar\">\n          <Link to=\"/home1\">\n            <b>\n              <img\n                className=\"nav-home\"\n                src={home}\n                height=\"25\"\n                width=\"25\"\n                alt=\"Home\"\n              />\n            </b>\n          </Link>\n          <Link to=\"/dfp1\" className=\"nav-item\">\n            <b>Data</b>\n          </Link>\n          <Link to=\"/fetchalldata1\" className=\"nav-item\">\n            <b>Total</b>\n          </Link>\n\n          <Link to=\"/dfp1\" className=\"\">\n            <button className=\"print\" onClick={handlePrint}>\n              <img\n                className=\"nav-logout\"\n                src={print}\n                height=\"28\"\n                width=\"28\"\n                alt=\"logout\"\n              />\n            </button>\n          </Link>\n        </nav>\n      </ul>\n\n      <p>\n        <h1 className=\"patched-data\">Patched Data</h1>\n      </p>\n\n      <div className=\"search-input\" style={{ position: \"relative\" }}>\n        <input\n          className=\"search-field\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          style={{ paddingRight: \"30px\" }}\n        />\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"26\"\n          height=\"26\"\n          fill=\"currentColor\"\n          className=\"bi bi-search\"\n          viewBox=\"0 0 16 16\"\n          style={{\n            position: \"absolute\",\n            right: \"10px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n          }}\n        >\n          <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n        </svg>\n      </div>\n\n      {loading ? (\n        <p className=\"server-m\">\n          Server is not running .... <p className=\"loading-ani-server\"></p>\n        </p>\n      ) : (\n        <div className=\"data-container-dfp\">\n          <DeletePersonal />\n\n          {searchResult.length > 0 ? (\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>pername</th>\n                  <th>quantity</th>\n                  <th>price</th>\n                  <th>dameg</th>\n                  <th>Timestamp</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {searchResult.map((i) => (\n                  <tr key={i._id}>\n                    <td>{i._id}</td>\n                    <td>{i.pername}</td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.quantity}\n                          value={updateData.quantity}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              quantity: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.quantity\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.price}\n                          value={updateData.price}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              price: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.price\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.dameg}\n                          value={updateData.dameg}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              dameg: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.dameg\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.timestamp}\n                          value={updateData.timestamp}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              timestamp: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.timestamp\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <>\n                          <button\n                            className=\"update-ch1\"\n                            onClick={updatePersonalItem}\n                          >\n                            Save\n                          </button>\n                          <button className=\"update-ch2\" onClick={cancelUpdate}>\n                            Cancel\n                          </button>\n                        </>\n                      ) : (\n                        <button\n                          className=\"update\"\n                          onClick={() => handleUpdate(i._id)}\n                        >\n                          Update\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <div>\n              {loading ? (\n                <p className=\"server-m\">\n                  Server is not running ....{\" \"}\n                  <p className=\"loading-ani-server\"></p>\n                </p>\n              ) : (\n                <div className=\"data-container-dfp\">\n                  <DeletePersonal />\n\n                  <table className=\"data-table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>pername</th>\n                        <th>quantity</th>\n                        <th>price</th>\n                        <th>dameg</th>\n                        <th>Timestamp</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.map((i) => (\n                        <tr key={i._id}>\n                          <td>{i._id}</td>\n                          <td>{i.pername}</td>\n                          <td>\n                            {updateId === i._id ? (\n                              <input\n                                type=\"text\"\n                                placeholder={i.quantity}\n                                value={updateData.quantity}\n                                onChange={(e) =>\n                                  setUpdateData({\n                                    ...updateData,\n                                    quantity: e.target.value,\n                                  })\n                                }\n                              />\n                            ) : (\n                              i.quantity\n                            )}\n                          </td>\n                          <td>\n                            {updateId === i._id ? (\n                              <input\n                                type=\"text\"\n                                placeholder={i.price}\n                                value={updateData.price}\n                                onChange={(e) =>\n                                  setUpdateData({\n                                    ...updateData,\n                                    price: e.target.value,\n                                  })\n                                }\n                              />\n                            ) : (\n                              i.price\n                            )}\n                          </td>\n                          <td>\n                            {updateId === i._id ? (\n                              <input\n                                type=\"text\"\n                                placeholder={i.dameg}\n                                value={updateData.dameg}\n                                onChange={(e) =>\n                                  setUpdateData({\n                                    ...updateData,\n                                    dameg: e.target.value,\n                                  })\n                                }\n                              />\n                            ) : (\n                              i.dameg\n                            )}\n                          </td>\n                          <td>\n                            {updateId === i._id ? (\n                              <input\n                                type=\"text\"\n                                placeholder={i.timestamp}\n                                value={updateData.timestamp}\n                                onChange={(e) =>\n                                  setUpdateData({\n                                    ...updateData,\n                                    timestamp: e.target.value,\n                                  })\n                                }\n                              />\n                            ) : (\n                              i.timestamp\n                            )}\n                          </td>\n                          <td>\n                            {updateId === i._id ? (\n                              <>\n                                <button\n                                  className=\"update-ch1\"\n                                  onClick={updatePersonalItem}\n                                >\n                                  Save\n                                </button>\n                                <button\n                                  className=\"update-ch2\"\n                                  onClick={cancelUpdate}\n                                >\n                                  Cancel\n                                </button>\n                              </>\n                            ) : (\n                              <button\n                                className=\"update\"\n                                onClick={() => handleUpdate(i._id)}\n                              >\n                                Update\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DFP1;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,cAAc;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}