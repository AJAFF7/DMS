{"ast":null,"code":"// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import BackButton from \"./Backbutton\";\n// // import DeletePersonal from \"./delettions\";\n\n// // const DFP1 = () => {\n// //   const [data, setData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [updateId, setUpdateId] = useState(null);\n// //   const [updateData, setUpdateData] = useState({\n// //     quantity: \"\",\n// //     price: \"\",\n// //     dameg: \"\",\n// //     timestamp: \"\",\n// //   });\n\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     if (!localStorage.getItem(\"userID\")) {\n// //       navigate(\"/\");\n// //     }\n// //   }, [navigate]);\n\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []); // Fetch data on mount\n\n// //   const fetchData = async () => {\n// //     try {\n// //       const response = await fetch(\"/auth/personal1\", {\n// //         method: \"GET\",\n// //       });\n\n// //       if (response.ok) {\n// //         const responseData = await response.json();\n// //         setData(responseData.data);\n// //         setLoading(false);\n// //       } else {\n// //         console.error(\"Error fetching data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error fetching data:\", error);\n// //     }\n// //   };\n\n// //   const handlePrint = () => {\n// //     window.print();\n// //   };\n\n// //   const goTo = () => {\n// //     navigate(\"/Fetchalldata1\");\n// //   };\n\n// //   const handleUpdate = (id) => {\n// //     setUpdateId(id);\n// //     const selectedItem = data.find((item) => item._id === id);\n// //     setUpdateData({\n// //       quantity: selectedItem.quantity,\n// //       price: selectedItem.price,\n// //       dameg: selectedItem.dameg,\n// //       timestamp: selectedItem.timestamp,\n// //     });\n// //   };\n\n// //   const cancelUpdate = () => {\n// //     setUpdateId(null);\n// //     setUpdateData({\n// //       quantity: \"\",\n// //       price: \"\",\n// //       dameg: \"\",\n// //       timestamp: \"\",\n// //     });\n// //   };\n\n// //   const updatePersonalItem = async () => {\n// //     try {\n// //       const response = await fetch(`/auth/personal1/${updateId}`, {\n// //         method: \"PATCH\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(updateData),\n// //       });\n\n// //       if (response.ok) {\n// //         // Refresh data after updating\n// //         fetchData();\n\n// //         // Reset update state\n// //         cancelUpdate();\n// //       } else {\n// //         console.error(\"Error updating data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error updating data:\", error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <BackButton />\n// //       <button className=\"buttons\" onClick={goTo}>\n// //         Total\n// //       </button>\n\n// //       <button className=\"buttons\" onClick={handlePrint}>\n// //         Print\n// //       </button>\n// //       {/* <DeletePersonal /> */}\n\n// //       <p>\n// //         <h1 className=\"patched-data\">Patched Data</h1>\n// //       </p>\n\n// //       {loading ? (\n// //         <p className=\"server-m\">\n// //           Server is not running .... <p className=\"loading-ani-server\"></p>\n// //         </p>\n// //       ) : (\n// //         <div className=\"data-container-dfp\">\n// //           <DeletePersonal />\n// //           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n// //           {data && data.length > 0 ? (\n// //             <table className=\"data-table\">\n// //               <thead>\n// //                 <tr>\n// //                   <th>ID</th>\n// //                   <th>pername</th>\n// //                   <th>quantity</th>\n// //                   <th>price</th>\n// //                   <th>dameg</th>\n// //                   <th>Timestamp</th>\n// //                   <th>Actions</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {data.map((i) => (\n// //                   <tr key={i._id}>\n// //                     <td>{i._id}</td>\n// //                     <td>{i.pername}</td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.quantity}\n// //                           value={updateData.quantity}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               quantity: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.quantity\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.price}\n// //                           value={updateData.price}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               price: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.price\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.dameg}\n// //                           value={updateData.dameg}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               dameg: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.dameg\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.timestamp}\n// //                           value={updateData.timestamp}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               timestamp: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.timestamp\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <>\n// //                           <button\n// //                             className=\"update-ch1\"\n// //                             onClick={updatePersonalItem}\n// //                           >\n// //                             Save\n// //                           </button>\n// //                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n// //                             Cancel\n// //                           </button>\n// //                         </>\n// //                       ) : (\n// //                         <button\n// //                           className=\"update\"\n// //                           onClick={() => handleUpdate(i._id)}\n// //                         >\n// //                           Update\n// //                         </button>\n// //                       )}\n// //                     </td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //           ) : (\n// //             <p>No data available</p>\n// //           )}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default DFP1;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import BackButton from \"./Backbutton\";\n// // import DeletePersonal from \"./delettions\";\n\n// // const DFP1 = () => {\n// //   const [data, setData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [updateId, setUpdateId] = useState(null);\n// //   const [updateData, setUpdateData] = useState({\n// //     quantity: \"\",\n// //     price: \"\",\n// //     dameg: \"\",\n// //     timestamp: \"\",\n// //   });\n// //   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     if (!localStorage.getItem(\"userID\")) {\n// //       navigate(\"/\");\n// //     }\n// //   }, [navigate]);\n\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []); // Fetch data on mount\n\n// //   const fetchData = async () => {\n// //     try {\n// //       const response = await fetch(\"/auth/personal1\", {\n// //         method: \"GET\",\n// //       });\n\n// //       if (response.ok) {\n// //         const responseData = await response.json();\n// //         setData(responseData.data);\n// //         setLoading(false);\n// //       } else {\n// //         console.error(\"Error fetching data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error fetching data:\", error);\n// //     }\n// //   };\n\n// //   const handlePrint = () => {\n// //     window.print();\n// //   };\n\n// //   const goTo = () => {\n// //     navigate(\"/Fetchalldata1\");\n// //   };\n\n// //   const handleUpdate = (id) => {\n// //     setUpdateId(id);\n// //     const selectedItem = data.find((item) => item._id === id);\n// //     setUpdateData({\n// //       quantity: selectedItem.quantity,\n// //       price: selectedItem.price,\n// //       dameg: selectedItem.dameg,\n// //       timestamp: selectedItem.timestamp,\n// //     });\n// //   };\n\n// //   const cancelUpdate = () => {\n// //     setUpdateId(null);\n// //     setUpdateData({\n// //       quantity: \"\",\n// //       price: \"\",\n// //       dameg: \"\",\n// //       timestamp: \"\",\n// //     });\n// //   };\n\n// //   const updatePersonalItem = async () => {\n// //     try {\n// //       const response = await fetch(`/auth/personal1/${updateId}`, {\n// //         method: \"PATCH\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(updateData),\n// //       });\n\n// //       if (response.ok) {\n// //         // Refresh data after updating\n// //         fetchData();\n\n// //         // Reset update state\n// //         cancelUpdate();\n// //       } else {\n// //         console.error(\"Error updating data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error updating data:\", error);\n// //     }\n// //   };\n\n// //   // Filter data based on search query\n// //   const filteredData = data.filter((item) => {\n// //     // Check if the search query is a valid date\n// //     const searchDate = new Date(searchQuery);\n// //     if (!isNaN(searchDate.getTime())) {\n// //       const itemDate = new Date(item.timestamp);\n// //       // Compare item's timestamp with search date\n// //       return itemDate.toDateString() === searchDate.toDateString();\n// //     }\n// //     // If the search query is not a valid date, perform regular string search\n// //     return Object.values(item).some(\n// //       (value) =>\n// //         typeof value === \"string\" &&\n// //         value.toLowerCase().includes(searchQuery.toLowerCase()),\n// //     );\n// //   });\n\n// //   return (\n// //     <div>\n// //       <BackButton />\n// //       <button className=\"buttons\" onClick={goTo}>\n// //         Total\n// //       </button>\n\n// //       <button className=\"buttons\" onClick={handlePrint}>\n// //         Print\n// //       </button>\n// //       {/* <DeletePersonal /> */}\n\n// //       <p>\n// //         <h1 className=\"patched-data\">Patched Data</h1>\n// //       </p>\n\n// //       {/* Search input field */}\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Search...\"\n// //         value={searchQuery}\n// //         onChange={(e) => setSearchQuery(e.target.value)}\n// //       />\n\n// //       {loading ? (\n// //         <p className=\"server-m\">\n// //           Server is not running .... <p className=\"loading-ani-server\"></p>\n// //         </p>\n// //       ) : (\n// //         <div className=\"data-container-dfp\">\n// //           <DeletePersonal />\n// //           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n// //           {filteredData.length > 0 ? (\n// //             <table className=\"data-table\">\n// //               <thead>\n// //                 <tr>\n// //                   <th>ID</th>\n// //                   <th>pername</th>\n// //                   <th>quantity</th>\n// //                   <th>price</th>\n// //                   <th>dameg</th>\n// //                   <th>Timestamp</th>\n// //                   <th>Actions</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {filteredData.map((i) => (\n// //                   <tr key={i._id}>\n// //                     <td>{i._id}</td>\n// //                     <td>{i.pername}</td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.quantity}\n// //                           value={updateData.quantity}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               quantity: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.quantity\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.price}\n// //                           value={updateData.price}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               price: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.price\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.dameg}\n// //                           value={updateData.dameg}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               dameg: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.dameg\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.timestamp}\n// //                           value={updateData.timestamp}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               timestamp: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.timestamp\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //\n// //\n// //\n// //\n// //\n// //\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   //Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       {/* <BackButton />\n//       <button className=\"buttons\" onClick={goTo}>\n//         Total\n//       </button>\n\n//       <button className=\"buttons\" onClick={handlePrint}>\n//         Print\n//       </button> */}\n//       {/* <DeletePersonal /> */}\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       {/* <div className=\"search-input\">\n\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//       </div> */}\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }} // Adjust padding if needed\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n//           {filteredData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   // Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   // Get the latest 7-day data\n//   const latest60DayData = data.filter((item) => {\n//     const today = new Date();\n//     const itemDate = new Date(item.timestamp);\n//     const timeDiff = Math.abs(today - itemDate);\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n//     // return daysDiff <= 7;\n//     return daysDiff <= 60;\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }}\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {latest60DayData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {latest60DayData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available in the last 7 days</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;","map":{"version":3,"names":[],"sources":["/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/DFP1.js"],"sourcesContent":["// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import BackButton from \"./Backbutton\";\n// // import DeletePersonal from \"./delettions\";\n\n// // const DFP1 = () => {\n// //   const [data, setData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [updateId, setUpdateId] = useState(null);\n// //   const [updateData, setUpdateData] = useState({\n// //     quantity: \"\",\n// //     price: \"\",\n// //     dameg: \"\",\n// //     timestamp: \"\",\n// //   });\n\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     if (!localStorage.getItem(\"userID\")) {\n// //       navigate(\"/\");\n// //     }\n// //   }, [navigate]);\n\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []); // Fetch data on mount\n\n// //   const fetchData = async () => {\n// //     try {\n// //       const response = await fetch(\"/auth/personal1\", {\n// //         method: \"GET\",\n// //       });\n\n// //       if (response.ok) {\n// //         const responseData = await response.json();\n// //         setData(responseData.data);\n// //         setLoading(false);\n// //       } else {\n// //         console.error(\"Error fetching data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error fetching data:\", error);\n// //     }\n// //   };\n\n// //   const handlePrint = () => {\n// //     window.print();\n// //   };\n\n// //   const goTo = () => {\n// //     navigate(\"/Fetchalldata1\");\n// //   };\n\n// //   const handleUpdate = (id) => {\n// //     setUpdateId(id);\n// //     const selectedItem = data.find((item) => item._id === id);\n// //     setUpdateData({\n// //       quantity: selectedItem.quantity,\n// //       price: selectedItem.price,\n// //       dameg: selectedItem.dameg,\n// //       timestamp: selectedItem.timestamp,\n// //     });\n// //   };\n\n// //   const cancelUpdate = () => {\n// //     setUpdateId(null);\n// //     setUpdateData({\n// //       quantity: \"\",\n// //       price: \"\",\n// //       dameg: \"\",\n// //       timestamp: \"\",\n// //     });\n// //   };\n\n// //   const updatePersonalItem = async () => {\n// //     try {\n// //       const response = await fetch(`/auth/personal1/${updateId}`, {\n// //         method: \"PATCH\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(updateData),\n// //       });\n\n// //       if (response.ok) {\n// //         // Refresh data after updating\n// //         fetchData();\n\n// //         // Reset update state\n// //         cancelUpdate();\n// //       } else {\n// //         console.error(\"Error updating data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error updating data:\", error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <BackButton />\n// //       <button className=\"buttons\" onClick={goTo}>\n// //         Total\n// //       </button>\n\n// //       <button className=\"buttons\" onClick={handlePrint}>\n// //         Print\n// //       </button>\n// //       {/* <DeletePersonal /> */}\n\n// //       <p>\n// //         <h1 className=\"patched-data\">Patched Data</h1>\n// //       </p>\n\n// //       {loading ? (\n// //         <p className=\"server-m\">\n// //           Server is not running .... <p className=\"loading-ani-server\"></p>\n// //         </p>\n// //       ) : (\n// //         <div className=\"data-container-dfp\">\n// //           <DeletePersonal />\n// //           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n// //           {data && data.length > 0 ? (\n// //             <table className=\"data-table\">\n// //               <thead>\n// //                 <tr>\n// //                   <th>ID</th>\n// //                   <th>pername</th>\n// //                   <th>quantity</th>\n// //                   <th>price</th>\n// //                   <th>dameg</th>\n// //                   <th>Timestamp</th>\n// //                   <th>Actions</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {data.map((i) => (\n// //                   <tr key={i._id}>\n// //                     <td>{i._id}</td>\n// //                     <td>{i.pername}</td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.quantity}\n// //                           value={updateData.quantity}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               quantity: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.quantity\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.price}\n// //                           value={updateData.price}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               price: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.price\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.dameg}\n// //                           value={updateData.dameg}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               dameg: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.dameg\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.timestamp}\n// //                           value={updateData.timestamp}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               timestamp: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.timestamp\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <>\n// //                           <button\n// //                             className=\"update-ch1\"\n// //                             onClick={updatePersonalItem}\n// //                           >\n// //                             Save\n// //                           </button>\n// //                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n// //                             Cancel\n// //                           </button>\n// //                         </>\n// //                       ) : (\n// //                         <button\n// //                           className=\"update\"\n// //                           onClick={() => handleUpdate(i._id)}\n// //                         >\n// //                           Update\n// //                         </button>\n// //                       )}\n// //                     </td>\n// //                   </tr>\n// //                 ))}\n// //               </tbody>\n// //             </table>\n// //           ) : (\n// //             <p>No data available</p>\n// //           )}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default DFP1;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import BackButton from \"./Backbutton\";\n// // import DeletePersonal from \"./delettions\";\n\n// // const DFP1 = () => {\n// //   const [data, setData] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [updateId, setUpdateId] = useState(null);\n// //   const [updateData, setUpdateData] = useState({\n// //     quantity: \"\",\n// //     price: \"\",\n// //     dameg: \"\",\n// //     timestamp: \"\",\n// //   });\n// //   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     if (!localStorage.getItem(\"userID\")) {\n// //       navigate(\"/\");\n// //     }\n// //   }, [navigate]);\n\n// //   useEffect(() => {\n// //     fetchData();\n// //   }, []); // Fetch data on mount\n\n// //   const fetchData = async () => {\n// //     try {\n// //       const response = await fetch(\"/auth/personal1\", {\n// //         method: \"GET\",\n// //       });\n\n// //       if (response.ok) {\n// //         const responseData = await response.json();\n// //         setData(responseData.data);\n// //         setLoading(false);\n// //       } else {\n// //         console.error(\"Error fetching data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error fetching data:\", error);\n// //     }\n// //   };\n\n// //   const handlePrint = () => {\n// //     window.print();\n// //   };\n\n// //   const goTo = () => {\n// //     navigate(\"/Fetchalldata1\");\n// //   };\n\n// //   const handleUpdate = (id) => {\n// //     setUpdateId(id);\n// //     const selectedItem = data.find((item) => item._id === id);\n// //     setUpdateData({\n// //       quantity: selectedItem.quantity,\n// //       price: selectedItem.price,\n// //       dameg: selectedItem.dameg,\n// //       timestamp: selectedItem.timestamp,\n// //     });\n// //   };\n\n// //   const cancelUpdate = () => {\n// //     setUpdateId(null);\n// //     setUpdateData({\n// //       quantity: \"\",\n// //       price: \"\",\n// //       dameg: \"\",\n// //       timestamp: \"\",\n// //     });\n// //   };\n\n// //   const updatePersonalItem = async () => {\n// //     try {\n// //       const response = await fetch(`/auth/personal1/${updateId}`, {\n// //         method: \"PATCH\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify(updateData),\n// //       });\n\n// //       if (response.ok) {\n// //         // Refresh data after updating\n// //         fetchData();\n\n// //         // Reset update state\n// //         cancelUpdate();\n// //       } else {\n// //         console.error(\"Error updating data:\", response.statusText);\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Error updating data:\", error);\n// //     }\n// //   };\n\n// //   // Filter data based on search query\n// //   const filteredData = data.filter((item) => {\n// //     // Check if the search query is a valid date\n// //     const searchDate = new Date(searchQuery);\n// //     if (!isNaN(searchDate.getTime())) {\n// //       const itemDate = new Date(item.timestamp);\n// //       // Compare item's timestamp with search date\n// //       return itemDate.toDateString() === searchDate.toDateString();\n// //     }\n// //     // If the search query is not a valid date, perform regular string search\n// //     return Object.values(item).some(\n// //       (value) =>\n// //         typeof value === \"string\" &&\n// //         value.toLowerCase().includes(searchQuery.toLowerCase()),\n// //     );\n// //   });\n\n// //   return (\n// //     <div>\n// //       <BackButton />\n// //       <button className=\"buttons\" onClick={goTo}>\n// //         Total\n// //       </button>\n\n// //       <button className=\"buttons\" onClick={handlePrint}>\n// //         Print\n// //       </button>\n// //       {/* <DeletePersonal /> */}\n\n// //       <p>\n// //         <h1 className=\"patched-data\">Patched Data</h1>\n// //       </p>\n\n// //       {/* Search input field */}\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Search...\"\n// //         value={searchQuery}\n// //         onChange={(e) => setSearchQuery(e.target.value)}\n// //       />\n\n// //       {loading ? (\n// //         <p className=\"server-m\">\n// //           Server is not running .... <p className=\"loading-ani-server\"></p>\n// //         </p>\n// //       ) : (\n// //         <div className=\"data-container-dfp\">\n// //           <DeletePersonal />\n// //           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n// //           {filteredData.length > 0 ? (\n// //             <table className=\"data-table\">\n// //               <thead>\n// //                 <tr>\n// //                   <th>ID</th>\n// //                   <th>pername</th>\n// //                   <th>quantity</th>\n// //                   <th>price</th>\n// //                   <th>dameg</th>\n// //                   <th>Timestamp</th>\n// //                   <th>Actions</th>\n// //                 </tr>\n// //               </thead>\n// //               <tbody>\n// //                 {filteredData.map((i) => (\n// //                   <tr key={i._id}>\n// //                     <td>{i._id}</td>\n// //                     <td>{i.pername}</td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.quantity}\n// //                           value={updateData.quantity}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               quantity: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.quantity\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.price}\n// //                           value={updateData.price}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               price: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.price\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.dameg}\n// //                           value={updateData.dameg}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               dameg: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.dameg\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //                         <input\n// //                           type=\"text\"\n// //                           placeholder={i.timestamp}\n// //                           value={updateData.timestamp}\n// //                           onChange={(e) =>\n// //                             setUpdateData({\n// //                               ...updateData,\n// //                               timestamp: e.target.value,\n// //                             })\n// //                           }\n// //                         />\n// //                       ) : (\n// //                         i.timestamp\n// //                       )}\n// //                     </td>\n// //                     <td>\n// //                       {updateId === i._id ? (\n// //\n// //\n// //\n// //\n// //\n// //\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   //Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       {/* <BackButton />\n//       <button className=\"buttons\" onClick={goTo}>\n//         Total\n//       </button>\n\n//       <button className=\"buttons\" onClick={handlePrint}>\n//         Print\n//       </button> */}\n//       {/* <DeletePersonal /> */}\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       {/* <div className=\"search-input\">\n\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//         />\n//       </div> */}\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }} // Adjust padding if needed\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {/* <h1 className=\"totl-data\">Patched Data:</h1> */}\n//           {filteredData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// import BackButton from \"./Backbutton\";\n// import DeletePersonal from \"./delettions\";\n// import home from \"../assets/home.jpg\";\n// import print from \"../assets/print.png\";\n\n// const DFP1 = () => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [updateId, setUpdateId] = useState(null);\n//   const [updateData, setUpdateData] = useState({\n//     quantity: \"\",\n//     price: \"\",\n//     dameg: \"\",\n//     timestamp: \"\",\n//   });\n//   const [searchQuery, setSearchQuery] = useState(\"\"); // State to hold search query\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem(\"userID\")) {\n//       navigate(\"/\");\n//     }\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []); // Fetch data on mount\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"/auth/personal1\", {\n//         method: \"GET\",\n//       });\n\n//       if (response.ok) {\n//         const responseData = await response.json();\n//         setData(responseData.data);\n//         setLoading(false);\n//       } else {\n//         console.error(\"Error fetching data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handlePrint = () => {\n//     window.print();\n//   };\n\n//   const goTo = () => {\n//     navigate(\"/Fetchalldata1\");\n//   };\n\n//   const handleUpdate = (id) => {\n//     setUpdateId(id);\n//     const selectedItem = data.find((item) => item._id === id);\n//     setUpdateData({\n//       quantity: selectedItem.quantity,\n//       price: selectedItem.price,\n//       dameg: selectedItem.dameg,\n//       timestamp: selectedItem.timestamp,\n//     });\n//   };\n\n//   const cancelUpdate = () => {\n//     setUpdateId(null);\n//     setUpdateData({\n//       quantity: \"\",\n//       price: \"\",\n//       dameg: \"\",\n//       timestamp: \"\",\n//     });\n//   };\n\n//   const updatePersonalItem = async () => {\n//     try {\n//       const response = await fetch(`/auth/personal1/${updateId}`, {\n//         method: \"PATCH\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updateData),\n//       });\n\n//       if (response.ok) {\n//         // Refresh data after updating\n//         fetchData();\n\n//         // Reset update state\n//         cancelUpdate();\n//       } else {\n//         console.error(\"Error updating data:\", response.statusText);\n//       }\n//     } catch (error) {\n//       console.error(\"Error updating data:\", error);\n//     }\n//   };\n\n//   // Filter data based on search query\n//   const filteredData = data.filter((item) => {\n//     // Check if the search query is a valid date\n//     const searchDate = new Date(searchQuery);\n//     if (!isNaN(searchDate.getTime())) {\n//       const itemDate = new Date(item.timestamp);\n//       // Compare item's timestamp with search date\n//       return itemDate.toDateString() === searchDate.toDateString();\n//     }\n//     // If the search query is not a valid date, perform regular string search\n//     return Object.values(item).some(\n//       (value) =>\n//         typeof value === \"string\" &&\n//         value.toLowerCase().includes(searchQuery.toLowerCase()),\n//     );\n//   });\n\n//   // Get the latest 7-day data\n//   const latest60DayData = data.filter((item) => {\n//     const today = new Date();\n//     const itemDate = new Date(item.timestamp);\n//     const timeDiff = Math.abs(today - itemDate);\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n//     // return daysDiff <= 7;\n//     return daysDiff <= 60;\n//   });\n\n//   return (\n//     <div>\n//       <ul>\n//         <nav className=\"navbar\">\n//           <Link to=\"/home1\">\n//             <b>\n//               <img\n//                 className=\"nav-home\"\n//                 src={home}\n//                 height=\"25\"\n//                 width=\"25\"\n//                 alt=\"Home\"\n//               />\n//             </b>\n//           </Link>\n//           <Link to=\"/dfp1\" className=\"nav-item\">\n//             <b>Data</b>\n//           </Link>\n//           <Link to=\"/fetchalldata1\" className=\"nav-item\">\n//             <b>Total</b>\n//           </Link>\n\n//           <Link to=\"/dfp1\" className=\"\">\n//             <button className=\"print\" onClick={handlePrint}>\n//               <img\n//                 className=\"nav-logout\"\n//                 src={print}\n//                 height=\"28\"\n//                 width=\"28\"\n//                 alt=\"logout\"\n//               />\n//             </button>\n//           </Link>\n//         </nav>\n//       </ul>\n\n//       <p>\n//         <h1 className=\"patched-data\">Patched Data</h1>\n//       </p>\n\n//       <div className=\"search-input\" style={{ position: \"relative\" }}>\n//         <input\n//           className=\"search-field\"\n//           type=\"text\"\n//           placeholder=\"Search...\"\n//           value={searchQuery}\n//           onChange={(e) => setSearchQuery(e.target.value)}\n//           style={{ paddingRight: \"30px\" }}\n//         />\n//         <svg\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           width=\"26\"\n//           height=\"26\"\n//           fill=\"currentColor\"\n//           className=\"bi bi-search\"\n//           viewBox=\"0 0 16 16\"\n//           style={{\n//             position: \"absolute\",\n//             right: \"10px\",\n//             top: \"50%\",\n//             transform: \"translateY(-50%)\",\n//           }}\n//         >\n//           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//         </svg>\n//       </div>\n\n//       {loading ? (\n//         <p className=\"server-m\">\n//           Server is not running .... <p className=\"loading-ani-server\"></p>\n//         </p>\n//       ) : (\n//         <div className=\"data-container-dfp\">\n//           <DeletePersonal />\n\n//           {latest60DayData.length > 0 ? (\n//             <table className=\"data-table\">\n//               <thead>\n//                 <tr>\n//                   <th>ID</th>\n//                   <th>pername</th>\n//                   <th>quantity</th>\n//                   <th>price</th>\n//                   <th>dameg</th>\n//                   <th>Timestamp</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {latest60DayData.map((i) => (\n//                   <tr key={i._id}>\n//                     <td>{i._id}</td>\n//                     <td>{i.pername}</td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.quantity}\n//                           value={updateData.quantity}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               quantity: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.quantity\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.price}\n//                           value={updateData.price}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               price: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.price\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.dameg}\n//                           value={updateData.dameg}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               dameg: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.dameg\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <input\n//                           type=\"text\"\n//                           placeholder={i.timestamp}\n//                           value={updateData.timestamp}\n//                           onChange={(e) =>\n//                             setUpdateData({\n//                               ...updateData,\n//                               timestamp: e.target.value,\n//                             })\n//                           }\n//                         />\n//                       ) : (\n//                         i.timestamp\n//                       )}\n//                     </td>\n//                     <td>\n//                       {updateId === i._id ? (\n//                         <>\n//                           <button\n//                             className=\"update-ch1\"\n//                             onClick={updatePersonalItem}\n//                           >\n//                             Save\n//                           </button>\n//                           <button className=\"update-ch2\" onClick={cancelUpdate}>\n//                             Cancel\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <button\n//                           className=\"update\"\n//                           onClick={() => handleUpdate(i._id)}\n//                         >\n//                           Update\n//                         </button>\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           ) : (\n//             <p>No data available in the last 7 days</p>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DFP1;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}