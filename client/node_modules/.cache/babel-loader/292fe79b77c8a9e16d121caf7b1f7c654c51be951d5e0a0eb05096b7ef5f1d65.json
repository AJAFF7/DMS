{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Pie,Radar,Line}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='7ad9b1ba5a76bad365b642b56a1af781';const CITIES=['Erbil','Sulaymaniyah','Amsterdam','Moscow','Alaska','New York','London'];const INTERVAL_TIME=1500;const Weather=()=>{const[weatherData,setWeatherData]=useState({});const[coolestPlaceData,setCoolestPlaceData]=useState(null);const[chartData,setChartData]=useState({labels:['Temperature'],datasets:[]});const[error,setError]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(CITIES[currentIndex],\"&appid=\").concat(API_KEY,\"&units=metric\"));const data=response.data;setWeatherData(prevData=>({...prevData,[CITIES[currentIndex]]:data}));setError(null);updateCoolestPlace(data);updateChartData(data);}catch(error){console.error('Error fetching data: ',error);setError('Failed to fetch weather data. Please try again.');}};fetchData();const interval=setInterval(()=>{setCurrentIndex(prevIndex=>(prevIndex+1)%CITIES.length);},INTERVAL_TIME);return()=>clearInterval(interval);},[currentIndex]);const updateCoolestPlace=data=>{if(!coolestPlaceData||data&&data.main.temp<coolestPlaceData.main.temp){setCoolestPlaceData(data);}};const updateChartData=data=>{const city=CITIES[currentIndex];if(data){const newDataset={label:\"Temperature in \".concat(city,\" (\\xB0C)\"),fill:true,lineTension:1.5,backgroundColor:'orangered',borderColor:'black',borderWidth:1,data:[data.main.temp],pointRadius:3,pointBackgroundColor:'rgba(75,192,192,1)',pointBorderColor:'rgba(75,192,192)'};setChartData(prevChartData=>({labels:prevChartData.labels,datasets:[...prevChartData.datasets,newDataset]}));}};return/*#__PURE__*/_jsx(\"div\",{className:\"weather-container\",children:error?/*#__PURE__*/_jsx(\"p\",{children:error}):/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"coolest-place\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Coolest Place\"}),coolestPlaceData&&/*#__PURE__*/_jsxs(\"h4\",{children:[coolestPlaceData.name,\", \",coolestPlaceData.main.temp,\"\\xB0C\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Pie,{data:chartData,options:{maintainAspectRatio:false,scales:{y:{beginAtZero:true}}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-weather\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\" \",CITIES[currentIndex]]}),weatherData[CITIES[currentIndex]]&&/*#__PURE__*/_jsx(\"table\",{className:\"weather-table\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Temperature\"}),/*#__PURE__*/_jsxs(\"td\",{children:[weatherData[CITIES[currentIndex]].main.temp,\"\\xB0C\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"td\",{children:weatherData[CITIES[currentIndex]].weather[0].description})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Humidity\"}),/*#__PURE__*/_jsxs(\"td\",{children:[weatherData[CITIES[currentIndex]].main.humidity,\"%\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Wind Speed\"}),/*#__PURE__*/_jsxs(\"td\",{children:[weatherData[CITIES[currentIndex]].wind.speed,\" m/s\"]})]})]})})]})]})});};export default Weather;","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","Radar","Line","jsx","_jsx","jsxs","_jsxs","API_KEY","CITIES","INTERVAL_TIME","Weather","weatherData","setWeatherData","coolestPlaceData","setCoolestPlaceData","chartData","setChartData","labels","datasets","error","setError","currentIndex","setCurrentIndex","fetchData","response","get","concat","data","prevData","updateCoolestPlace","updateChartData","console","interval","setInterval","prevIndex","length","clearInterval","main","temp","city","newDataset","label","fill","lineTension","backgroundColor","borderColor","borderWidth","pointRadius","pointBackgroundColor","pointBorderColor","prevChartData","className","children","name","options","maintainAspectRatio","scales","y","beginAtZero","weather","description","humidity","wind","speed"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie, Radar, Line } from 'react-chartjs-2';\n\nconst API_KEY = '7ad9b1ba5a76bad365b642b56a1af781';\nconst CITIES = ['Erbil', 'Sulaymaniyah', 'Amsterdam', 'Moscow', 'Alaska', 'New York', 'London'];\nconst INTERVAL_TIME = 1500;\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState({});\n  const [coolestPlaceData, setCoolestPlaceData] = useState(null);\n  const [chartData, setChartData] = useState({\n    labels: ['Temperature'],\n    datasets: [],\n  });\n  const [error, setError] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${CITIES[currentIndex]}&appid=${API_KEY}&units=metric`\n        );\n        const data = response.data;\n        setWeatherData((prevData) => ({\n          ...prevData,\n          [CITIES[currentIndex]]: data,\n        }));\n        setError(null);\n        updateCoolestPlace(data);\n        updateChartData(data);\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n        setError('Failed to fetch weather data. Please try again.');\n      }\n    };\n\n    fetchData();\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % CITIES.length);\n    }, INTERVAL_TIME);\n\n    return () => clearInterval(interval);\n  }, [currentIndex]);\n\n  const updateCoolestPlace = (data) => {\n    if (!coolestPlaceData || (data && data.main.temp < coolestPlaceData.main.temp)) {\n      setCoolestPlaceData(data);\n    }\n  };\n\n  const updateChartData = (data) => {\n    const city = CITIES[currentIndex];\n    if (data) {\n      const newDataset = {\n        label: `Temperature in ${city} (°C)`,\n        fill: true,\n        lineTension: 1.5,\n        backgroundColor: 'orangered',\n        borderColor: 'black',\n        borderWidth: 1,\n        data: [data.main.temp],\n        pointRadius: 3,\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderColor: 'rgba(75,192,192)',\n      };\n      setChartData((prevChartData) => ({\n        labels: prevChartData.labels,\n        datasets: [...prevChartData.datasets, newDataset],\n      }));\n    }\n  };\n\n  return (\n    <div className=\"weather-container\">\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <div className=\"weather-info\">\n          <div className=\"coolest-place\">\n            <h3>Coolest Place</h3>\n            {coolestPlaceData && (\n              <h4>\n                {coolestPlaceData.name}, {coolestPlaceData.main.temp}°C\n              </h4>\n            )}\n          </div>\n          <div className=\"chart-container\">\n            <Pie\n              data={chartData}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  y: {\n                    beginAtZero: true,\n                  },\n                },\n              }}\n            />\n          </div>\n          <div className=\"city-weather\">\n            <h3> {CITIES[currentIndex]}</h3>\n            {weatherData[CITIES[currentIndex]] && (\n              <table className=\"weather-table\">\n                <tbody>\n                  <tr>\n                    <td>Temperature</td>\n                    <td>{weatherData[CITIES[currentIndex]].main.temp}°C</td>\n                  </tr>\n                  <tr>\n                    <td>Description</td>\n                    <td>{weatherData[CITIES[currentIndex]].weather[0].description}</td>\n                  </tr>\n                  <tr>\n                    <td>Humidity</td>\n                    <td>{weatherData[CITIES[currentIndex]].main.humidity}%</td>\n                  </tr>\n                  <tr>\n                    <td>Wind Speed</td>\n                    <td>{weatherData[CITIES[currentIndex]].wind.speed} m/s</td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}