{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteAccount = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate\n\n  useEffect(() => {\n    // Retrieve user ID from local storage\n    const storedUserId = window.localStorage.getItem('userID');\n    if (storedUserId !== null) {\n      setUserId(storedUserId);\n    }\n  }, []);\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      if (response.data.message) {\n        setMessage(response.data.message);\n        window.localStorage.removeItem(\"userID\");\n        localStorage.clear();\n        navigate(\"/\");\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteUser,\n      children: \"Delete User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteAccount, \"6VgNca+QNxHHKkIreXNuFkazmRM=\", false, function () {\n  return [useNavigate];\n});\n_c = DeleteAccount;\nexport default DeleteAccount;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     // Retrieve user ID from local storage\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* <h2>Delete User by ID</h2> */}\n//       {/* <p>User ID: {userId}</p> */}\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","DeleteAccount","_s","userId","setUserId","message","setMessage","navigate","storedUserId","window","localStorage","getItem","handleDeleteUser","response","delete","data","removeItem","clear","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\n\nconst DeleteAccount = () => {\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Initialize navigate\n\n  useEffect(() => {\n    // Retrieve user ID from local storage\n    const storedUserId = window.localStorage.getItem('userID');\n    if (storedUserId !== null) {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n      if (response.data.message) {\n        setMessage(response.data.message);\n\n        window.localStorage.removeItem(\"userID\")\n\n        localStorage.clear();\n        navigate(\"/\")\n       \n  \n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      {/* <h2>Delete User by ID</h2>\n      <p>User ID: {userId}</p> */}\n      <button onClick={handleDeleteUser}>Delete User</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default DeleteAccount;\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     // Retrieve user ID from local storage\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {/* <h2>Delete User by ID</h2> */}\n//       {/* <p>User ID: {userId}</p> */}\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCF,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC1D,IAAIH,YAAY,KAAK,IAAI,EAAE;MACzBJ,SAAS,CAACI,YAAY,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,MAAM,CAAE,kBAAiBX,MAAO,EAAC,CAAC;MAE/D,IAAIU,QAAQ,CAACE,IAAI,CAACV,OAAO,EAAE;QACzBC,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;QAEjCI,MAAM,CAACC,YAAY,CAACM,UAAU,CAAC,QAAQ,CAAC;QAExCN,YAAY,CAACO,KAAK,CAAC,CAAC;QACpBV,QAAQ,CAAC,GAAG,CAAC;MAGf;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdZ,UAAU,CAAE,UAASY,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACV,OAAO,GAAGa,KAAK,CAACb,OAAQ,EAAC,CAAC;IACtF;EACF,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBAGEnB,OAAA;MAAQoB,OAAO,EAAER,gBAAiB;MAAAO,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDnB,OAAO,iBAAIL,OAAA;MAAAmB,QAAA,EAAId;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCID,aAAa;EAAA,QAGAH,WAAW;AAAA;AAAA2B,EAAA,GAHxBxB,aAAa;AA0CnB,eAAeA,aAAa;;AAM5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}