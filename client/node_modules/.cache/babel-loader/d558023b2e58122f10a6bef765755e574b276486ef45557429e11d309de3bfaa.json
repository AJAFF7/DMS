{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Environments/DMS/client/src/Personal-1/Clock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const dayOfMonth = time.getDate(); // Get the day of the month (1-31)\n\n  const getHandAngle = (unit, totalUnits) => {\n    const unitAngle = 360 / totalUnits;\n    const value = unit % totalUnits;\n    return value * unitAngle % 360;\n  };\n  const hour = time.getHours();\n  const minute = time.getMinutes();\n  const second = time.getSeconds();\n  const hourAngle = getHandAngle(hour, 12) + 30 * (minute / 60);\n  const minuteAngle = getHandAngle(minute, 60);\n  const secondAngle = getHandAngle(second, 60);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analog-clock\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"circle\",\n      width: \"200\",\n      height: \"200\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"100\",\n        r: \"90\",\n        stroke: \"\",\n        strokeWidth: \"2\",\n        fill: \"#666666\",\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: `Day: ${dayOfMonth}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"20%\",\n        y: \"50%\",\n        textAnchor: \"middle\",\n        fontSize: \"10\",\n        fill: \"rgb(196, 253, 6)\",\n        children: dayOfMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"100\",\n        y1: \"100\",\n        x2: 100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180)),\n        y2: 100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180)),\n        stroke: \"black\",\n        strokeWidth: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"100\",\n        y1: \"100\",\n        x2: 100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180)),\n        y2: 100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180)),\n        stroke: \"black\",\n        strokeWidth: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"100\",\n        y1: \"100\",\n        x2: 100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180)),\n        y2: 100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180)),\n        stroke: \"red\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Clock, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = Clock;\nexport default Clock;\n\n// import React, { useState, useEffect } from 'react';\n\n// const Clock = () => {\n//   const [time, setTime] = useState(new Date());\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setTime(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const getHandAngle = (unit, totalUnits) => {\n//     const unitAngle = 360 / totalUnits;\n//     const value = unit % totalUnits;\n//     return (value * unitAngle) % 360;\n//   };\n\n//   const hour = time.getHours();\n//   const minute = time.getMinutes();\n//   const second = time.getSeconds();\n\n//   const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n//   const minuteAngle = getHandAngle(minute, 60);\n//   const secondAngle = getHandAngle(second, 60);\n\n//   return (\n//     <div className=\"analog-clock\">\n//       <svg width=\"200\" height=\"200\">\n//         {/* Clock face */}\n//         <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"silver\" strokeWidth=\"2\" fill=\"#54261956\" />\n\n//         {/* Hour hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"6\"\n//         />\n\n//         {/* Minute hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"4\"\n//         />\n\n//         {/* Second hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n//           stroke=\"red\"\n//           strokeWidth=\"2\"\n//         />\n//       </svg>\n//     </div>\n//   );\n// };\n\n// export default Clock\n\n// import React, { useState } from 'react'\n\n// const Clock = () => {\n//     let time = new Date().toLocaleTimeString();\n//     const [currentTime, setCurrentTime ] = useState(time);\n\n//     const updateTime = () => {\n//         let time = new Date().toLocaleTimeString();\n//         setCurrentTime(time)\n//    }\n//     setInterval(updateTime, 1000);\n\n//    return (\n//         <div className='clock'>\n//             <h1>\n//             {currentTime}\n//             </h1>\n\n//         </div>\n\n//   );\n// };\n\n//  export default Clock\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","time","setTime","Date","interval","setInterval","clearInterval","dayOfMonth","getDate","getHandAngle","unit","totalUnits","unitAngle","value","hour","getHours","minute","getMinutes","second","getSeconds","hourAngle","minuteAngle","secondAngle","className","children","width","height","cx","cy","r","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","x","y","textAnchor","fontSize","x1","y1","x2","Math","cos","PI","y2","sin","_c","$RefreshReg$"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Clock = () => {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const dayOfMonth = time.getDate(); // Get the day of the month (1-31)\n\n  const getHandAngle = (unit, totalUnits) => {\n    const unitAngle = 360 / totalUnits;\n    const value = unit % totalUnits;\n    return (value * unitAngle) % 360;\n  };\n\n  const hour = time.getHours();\n  const minute = time.getMinutes();\n  const second = time.getSeconds();\n\n  const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n  const minuteAngle = getHandAngle(minute, 60);\n  const secondAngle = getHandAngle(second, 60);\n\n  return (\n    <div className=\"analog-clock\">\n      <svg  className='circle'  width=\"200\" height=\"200\">\n        {/* Clock face */}\n        <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"\" strokeWidth=\"2\" fill=\"#666666\">\n          <title>{`Day: ${dayOfMonth}`}</title>\n        </circle>\n\n        {/* Day of the Month Display */}\n        <text x=\"20%\" y=\"50%\" textAnchor=\"middle\" fontSize=\"10\" fill=\"rgb(196, 253, 6)\">\n          {dayOfMonth}\n        </text>\n\n        {/* Hour hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n          y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n          stroke=\"black\"\n          strokeWidth=\"6\"\n        />\n\n        {/* Minute hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n          y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n          stroke=\"black\"\n          strokeWidth=\"4\"\n        />\n\n        {/* Second hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n          y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n          stroke=\"red\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Clock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n\n// const Clock = () => {\n//   const [time, setTime] = useState(new Date());\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setTime(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const getHandAngle = (unit, totalUnits) => {\n//     const unitAngle = 360 / totalUnits;\n//     const value = unit % totalUnits;\n//     return (value * unitAngle) % 360;\n//   };\n\n//   const hour = time.getHours();\n//   const minute = time.getMinutes();\n//   const second = time.getSeconds();\n\n//   const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n//   const minuteAngle = getHandAngle(minute, 60);\n//   const secondAngle = getHandAngle(second, 60);\n\n//   return (\n//     <div className=\"analog-clock\">\n//       <svg width=\"200\" height=\"200\">\n//         {/* Clock face */}\n//         <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"silver\" strokeWidth=\"2\" fill=\"#54261956\" />\n\n//         {/* Hour hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"6\"\n//         />\n\n//         {/* Minute hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"4\"\n//         />\n\n//         {/* Second hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n//           stroke=\"red\"\n//           strokeWidth=\"2\"\n//         />\n//       </svg>\n//     </div>\n//   );\n// };\n\n\n\n\n// export default Clock\n\n\n\n\n\n\n// import React, { useState } from 'react'\n\n// const Clock = () => {\n//     let time = new Date().toLocaleTimeString();\n//     const [currentTime, setCurrentTime ] = useState(time);\n\n//     const updateTime = () => {\n//         let time = new Date().toLocaleTimeString();\n//         setCurrentTime(time)\n//    }\n//     setInterval(updateTime, 1000);\n\n//    return (\n//         <div className='clock'>\n//             <h1>\n//             {currentTime}\n//             </h1>\n         \n//         </div>\n          \n//   );\n// };\n\n//  export default Clock"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}