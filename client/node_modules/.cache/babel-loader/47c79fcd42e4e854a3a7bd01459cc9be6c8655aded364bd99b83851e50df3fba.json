{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Clock=()=>{const[time,setTime]=useState(new Date());useEffect(()=>{const interval=setInterval(()=>{setTime(new Date());},1000);return()=>clearInterval(interval);},[]);const dayOfMonth=time.getDate();// Get the day of the month (1-31)\nconst getHandAngle=(unit,totalUnits)=>{const unitAngle=360/totalUnits;const value=unit%totalUnits;return value*unitAngle%360;};const hour=time.getHours();const minute=time.getMinutes();const second=time.getSeconds();const hourAngle=getHandAngle(hour,12)+30*(minute/60);const minuteAngle=getHandAngle(minute,60);const secondAngle=getHandAngle(second,60);return/*#__PURE__*/_jsx(\"div\",{className:\"analog-clock\",children:/*#__PURE__*/_jsxs(\"svg\",{className:\"circle\",width:\"200\",height:\"200\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"100\",cy:\"100\",r:\"90\",stroke:\"\",strokeWidth:\"2\",fill:\"#666666\",children:/*#__PURE__*/_jsx(\"title\",{children:\"Day: \".concat(dayOfMonth)})}),/*#__PURE__*/_jsx(\"text\",{x:\"20%\",y:\"50%\",textAnchor:\"middle\",fontSize:\"10\",fill:\"rgb(196, 253, 6)\",children:dayOfMonth}),/*#__PURE__*/_jsx(\"line\",{x1:\"100\",y1:\"100\",x2:100+40*Math.cos((hourAngle-90)*(Math.PI/180)),y2:100+40*Math.sin((hourAngle-90)*(Math.PI/180)),stroke:\"black\",strokeWidth:\"6\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"100\",y1:\"100\",x2:100+50*Math.cos((minuteAngle-90)*(Math.PI/180)),y2:100+50*Math.sin((minuteAngle-90)*(Math.PI/180)),stroke:\"black\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"100\",y1:\"100\",x2:100+60*Math.cos((secondAngle-90)*(Math.PI/180)),y2:100+60*Math.sin((secondAngle-90)*(Math.PI/180)),stroke:\"red\",strokeWidth:\"2\"})]})});};export default Clock;// import React, { useState, useEffect } from 'react';\n// const Clock = () => {\n//   const [time, setTime] = useState(new Date());\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setTime(new Date());\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n//   const getHandAngle = (unit, totalUnits) => {\n//     const unitAngle = 360 / totalUnits;\n//     const value = unit % totalUnits;\n//     return (value * unitAngle) % 360;\n//   };\n//   const hour = time.getHours();\n//   const minute = time.getMinutes();\n//   const second = time.getSeconds();\n//   const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n//   const minuteAngle = getHandAngle(minute, 60);\n//   const secondAngle = getHandAngle(second, 60);\n//   return (\n//     <div className=\"analog-clock\">\n//       <svg width=\"200\" height=\"200\">\n//         {/* Clock face */}\n//         <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"silver\" strokeWidth=\"2\" fill=\"#54261956\" />\n//         {/* Hour hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"6\"\n//         />\n//         {/* Minute hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"4\"\n//         />\n//         {/* Second hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n//           stroke=\"red\"\n//           strokeWidth=\"2\"\n//         />\n//       </svg>\n//     </div>\n//   );\n// };\n// export default Clock\n// import React, { useState } from 'react'\n// const Clock = () => {\n//     let time = new Date().toLocaleTimeString();\n//     const [currentTime, setCurrentTime ] = useState(time);\n//     const updateTime = () => {\n//         let time = new Date().toLocaleTimeString();\n//         setCurrentTime(time)\n//    }\n//     setInterval(updateTime, 1000);\n//    return (\n//         <div className='clock'>\n//             <h1>\n//             {currentTime}\n//             </h1>\n//         </div>\n//   );\n// };\n//  export default Clock","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Clock","time","setTime","Date","interval","setInterval","clearInterval","dayOfMonth","getDate","getHandAngle","unit","totalUnits","unitAngle","value","hour","getHours","minute","getMinutes","second","getSeconds","hourAngle","minuteAngle","secondAngle","className","children","width","height","cx","cy","r","stroke","strokeWidth","fill","concat","x","y","textAnchor","fontSize","x1","y1","x2","Math","cos","PI","y2","sin"],"sources":["/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Clock = () => {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const dayOfMonth = time.getDate(); // Get the day of the month (1-31)\n\n  const getHandAngle = (unit, totalUnits) => {\n    const unitAngle = 360 / totalUnits;\n    const value = unit % totalUnits;\n    return (value * unitAngle) % 360;\n  };\n\n  const hour = time.getHours();\n  const minute = time.getMinutes();\n  const second = time.getSeconds();\n\n  const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n  const minuteAngle = getHandAngle(minute, 60);\n  const secondAngle = getHandAngle(second, 60);\n\n  return (\n    <div className=\"analog-clock\">\n      <svg  className='circle'  width=\"200\" height=\"200\">\n        {/* Clock face */}\n        <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"\" strokeWidth=\"2\" fill=\"#666666\">\n          <title>{`Day: ${dayOfMonth}`}</title>\n        </circle>\n\n        {/* Day of the Month Display */}\n        <text x=\"20%\" y=\"50%\" textAnchor=\"middle\" fontSize=\"10\" fill=\"rgb(196, 253, 6)\">\n          {dayOfMonth}\n        </text>\n\n        {/* Hour hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n          y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n          stroke=\"black\"\n          strokeWidth=\"6\"\n        />\n\n        {/* Minute hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n          y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n          stroke=\"black\"\n          strokeWidth=\"4\"\n        />\n\n        {/* Second hand */}\n        <line\n          x1=\"100\"\n          y1=\"100\"\n          x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n          y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n          stroke=\"red\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Clock;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n\n// const Clock = () => {\n//   const [time, setTime] = useState(new Date());\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setTime(new Date());\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const getHandAngle = (unit, totalUnits) => {\n//     const unitAngle = 360 / totalUnits;\n//     const value = unit % totalUnits;\n//     return (value * unitAngle) % 360;\n//   };\n\n//   const hour = time.getHours();\n//   const minute = time.getMinutes();\n//   const second = time.getSeconds();\n\n//   const hourAngle = getHandAngle(hour, 12) + (30 * (minute / 60));\n//   const minuteAngle = getHandAngle(minute, 60);\n//   const secondAngle = getHandAngle(second, 60);\n\n//   return (\n//     <div className=\"analog-clock\">\n//       <svg width=\"200\" height=\"200\">\n//         {/* Clock face */}\n//         <circle cx=\"100\" cy=\"100\" r=\"90\" stroke=\"silver\" strokeWidth=\"2\" fill=\"#54261956\" />\n\n//         {/* Hour hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 40 * Math.cos((hourAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 40 * Math.sin((hourAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"6\"\n//         />\n\n//         {/* Minute hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 50 * Math.cos((minuteAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 50 * Math.sin((minuteAngle - 90) * (Math.PI / 180))}\n//           stroke=\"black\"\n//           strokeWidth=\"4\"\n//         />\n\n//         {/* Second hand */}\n//         <line\n//           x1=\"100\"\n//           y1=\"100\"\n//           x2={100 + 60 * Math.cos((secondAngle - 90) * (Math.PI / 180))}\n//           y2={100 + 60 * Math.sin((secondAngle - 90) * (Math.PI / 180))}\n//           stroke=\"red\"\n//           strokeWidth=\"2\"\n//         />\n//       </svg>\n//     </div>\n//   );\n// };\n\n\n\n\n// export default Clock\n\n\n\n\n\n\n// import React, { useState } from 'react'\n\n// const Clock = () => {\n//     let time = new Date().toLocaleTimeString();\n//     const [currentTime, setCurrentTime ] = useState(time);\n\n//     const updateTime = () => {\n//         let time = new Date().toLocaleTimeString();\n//         setCurrentTime(time)\n//    }\n//     setInterval(updateTime, 1000);\n\n//    return (\n//         <div className='clock'>\n//             <h1>\n//             {currentTime}\n//             </h1>\n         \n//         </div>\n          \n//   );\n// };\n\n//  export default Clock"],"mappings":"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CpB,WAAW,CAAG,EAAE,GAAKmB,IAAI,CAACE,EAAE,CAAG,GAAG,CAAC,CAAE,CAC9DC,EAAE,CAAE,GAAG,CAAG,EAAE,CAAGH,IAAI,CAACI,GAAG,CAAC,CAACvB,WAAW,CAAG,EAAE,GAAKmB,IAAI,CAACE,EAAE,CAAG,GAAG,CAAC,CAAE,CAC9Db,MAAM,CAAC,KAAK,CACZC,WAAW,CAAC,GAAG,CAChB,CAAC,EACC,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/B,KAAK,CAepB;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}