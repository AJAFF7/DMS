{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n\n//     if (confirmed) {\n//       try {\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n//         if (response.data.message) {\n//           setMessage(response.data.message);\n\n//           window.localStorage.removeItem('userID');\n//           localStorage.clear();\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n// // Import necessary dependencies\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// // Define DeleteAccount component\n// const DeleteAccount = () => {\n//   // State variables\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   // Fetch stored user ID on component mount\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   // Handle user account deletion\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n\n//     if (confirmed) {\n//       try {\n//         // Make API call to delete user account\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n//         // Check if the deletion was successful\n//         if (response.data.message) {\n//           setMessage(response.data.message);\n\n//           // Remove userID from local storage\n//           window.localStorage.removeItem('userID');\n\n//           // Navigate to the home page\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n\n//   // Render component\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// // Export the component\n// export default DeleteAccount;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteAccount = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      if (response.data.message) {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete User by ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"User ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteUser,\n      children: \"Delete User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteAccount, \"Yt9/MkWgUbYZzFSZyxirTnp9LSE=\");\n_c = DeleteAccount;\nexport default DeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeleteAccount","_s","userId","setUserId","message","setMessage","handleDeleteUser","response","delete","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n    \n//     if (confirmed) {\n//       try {\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n        \n//         if (response.data.message) {\n//           setMessage(response.data.message);\n\n//           window.localStorage.removeItem('userID');\n//           localStorage.clear();\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n\n\n// // Import necessary dependencies\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// // Define DeleteAccount component\n// const DeleteAccount = () => {\n//   // State variables\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   // Fetch stored user ID on component mount\n//   useEffect(() => {\n//     const storedUserId = window.localStorage.getItem('userID');\n//     if (storedUserId !== null) {\n//       setUserId(storedUserId);\n//     }\n//   }, []);\n\n//   // Handle user account deletion\n//   const handleDeleteUser = async () => {\n//     const confirmed = window.confirm(\"Are you sure you want to delete your account?\");\n    \n//     if (confirmed) {\n//       try {\n//         // Make API call to delete user account\n//         const response = await axios.delete(`/auth/p1-auths/${userId}`);\n        \n//         // Check if the deletion was successful\n//         if (response.data.message) {\n//           setMessage(response.data.message);\n\n//           // Remove userID from local storage\n//           window.localStorage.removeItem('userID');\n\n//           // Navigate to the home page\n//           navigate('/');\n//         }\n//       } catch (error) {\n//         setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//       }\n//     }\n//   };\n\n//   // Render component\n//   return (\n//     <div>\n//       <button className='buttons-delete' onClick={handleDeleteUser}>\n//         Delete account\n//       </button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// // Export the component\n// export default DeleteAccount;\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DeleteAccount = () => {\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n      if (response.data.message) {\n        setMessage(response.data.message);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Delete User by ID</h2>\n      <label>\n        User ID:\n        <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n      </label>\n      <button onClick={handleDeleteUser}>Delete User</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default DeleteAccount;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,MAAM,CAAE,kBAAiBN,MAAO,EAAC,CAAC;MAE/D,IAAIK,QAAQ,CAACE,IAAI,CAACL,OAAO,EAAE;QACzBC,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACL,OAAO,CAAC;MACnC;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdL,UAAU,CAAE,UAASK,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACL,OAAO,GAAGM,KAAK,CAACN,OAAQ,EAAC,CAAC;IACtF;EACF,CAAC;EAED,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAAY,QAAA,GAAO,UAEL,eAAAZ,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEf,MAAO;QAACgB,QAAQ,EAAGC,CAAC,IAAKhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACRhB,OAAA;MAAQsB,OAAO,EAAEf,gBAAiB;MAAAK,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDX,OAAO,iBAAIL,OAAA;MAAAY,QAAA,EAAIP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}