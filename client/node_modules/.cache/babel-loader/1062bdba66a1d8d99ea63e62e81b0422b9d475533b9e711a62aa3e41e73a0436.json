{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteAccount = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      if (response.data.message) {\n        setMessage(response.data.message);\n\n        // Clear user ID from local storage\n        localStorage.removeItem('userId');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n  const handleUserIdChange = e => {\n    const newUserId = e.target.value;\n    setUserId(newUserId);\n\n    // Uncomment the line below if you want to trigger deletion on every user ID change\n    // handleDeleteUser();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete User by ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"User ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: handleUserIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteAccount, \"Yt9/MkWgUbYZzFSZyxirTnp9LSE=\");\n_c = DeleteAccount;\nexport default DeleteAccount;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\nvar _c;\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeleteAccount","_s","userId","setUserId","message","setMessage","handleDeleteUser","response","delete","data","localStorage","removeItem","error","handleUserIdChange","e","newUserId","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/home/ubuntu/Environments/DMS/client/src/Personal-1/deleteaccount.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst DeleteAccount = () => {\n  const [userId, setUserId] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleDeleteUser = async () => {\n    try {\n      const response = await axios.delete(`/auth/p1-auths/${userId}`);\n\n      if (response.data.message) {\n        setMessage(response.data.message);\n\n        // Clear user ID from local storage\n        localStorage.removeItem('userId');\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n    }\n  };\n\n  const handleUserIdChange = (e) => {\n    const newUserId = e.target.value;\n    setUserId(newUserId);\n\n    // Uncomment the line below if you want to trigger deletion on every user ID change\n    // handleDeleteUser();\n  };\n\n  return (\n    <div>\n      <h2>Delete User by ID</h2>\n      <label>\n        User ID:\n        <input type=\"text\" value={userId} onChange={handleUserIdChange} />\n      </label>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default DeleteAccount;\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const DeleteAccount = () => {\n//   const [userId, setUserId] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleDeleteUser = async () => {\n//     try {\n//       const response = await axios.delete(`/auth/p1-auths/${userId}`);\n      \n//       if (response.data.message) {\n//         setMessage(response.data.message);\n//       }\n//     } catch (error) {\n//       setMessage(`Error: ${error.response ? error.response.data.message : error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Delete User by ID</h2>\n//       <label>\n//         User ID:\n//         <input type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n//       </label>\n//       <button onClick={handleDeleteUser}>Delete User</button>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// };\n\n// export default DeleteAccount;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,MAAM,CAAE,kBAAiBN,MAAO,EAAC,CAAC;MAE/D,IAAIK,QAAQ,CAACE,IAAI,CAACL,OAAO,EAAE;QACzBC,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACL,OAAO,CAAC;;QAEjC;QACAM,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;MACnC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,UAAU,CAAE,UAASO,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACL,OAAO,GAAGQ,KAAK,CAACR,OAAQ,EAAC,CAAC;IACtF;EACF,CAAC;EAED,MAAMS,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCd,SAAS,CAACY,SAAS,CAAC;;IAEpB;IACA;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BvB,OAAA;MAAAmB,QAAA,GAAO,UAEL,eAAAnB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACN,KAAK,EAAEf,MAAO;QAACsB,QAAQ,EAAEX;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACPlB,OAAO,iBAAIL,OAAA;MAAAmB,QAAA,EAAId;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAuCnB,eAAeA,aAAa;;AAS5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}