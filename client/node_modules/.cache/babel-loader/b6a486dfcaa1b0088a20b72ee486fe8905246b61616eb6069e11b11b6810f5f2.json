{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/DFP1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./Backbutton\";\nimport DeletePersonal from \"./delettions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DFP1 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updateId, setUpdateId] = useState(null);\n  const [updateData, setUpdateData] = useState({\n    quantity: \"\",\n    price: \"\",\n    dameg: \"\",\n    timestamp: \"\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem(\"userID\")) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n  useEffect(() => {\n    fetchData();\n  }, []); // Fetch data on mount\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"/auth/personal1\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        setData(responseData.data);\n        setLoading(false);\n      } else {\n        console.error(\"Error fetching data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handlePrint = () => {\n    window.print();\n  };\n  const goTo = () => {\n    navigate(\"/Fetchalldata1\");\n  };\n  const handleUpdate = id => {\n    setUpdateId(id);\n    const selectedItem = data.find(item => item._id === id);\n    setUpdateData({\n      quantity: selectedItem.quantity,\n      price: selectedItem.price,\n      dameg: selectedItem.dameg,\n      timestamp: selectedItem.timestamp\n    });\n  };\n  const cancelUpdate = () => {\n    setUpdateId(null);\n    setUpdateData({\n      quantity: \"\",\n      price: \"\",\n      dameg: \"\",\n      timestamp: \"\"\n    });\n  };\n  const updatePersonalItem = async () => {\n    try {\n      const response = await fetch(`/auth/personal1/${updateId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updateData)\n      });\n      if (response.ok) {\n        // Refresh data after updating\n        fetchData();\n\n        // Reset update state\n        cancelUpdate();\n      } else {\n        console.error(\"Error updating data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: goTo,\n      children: \"Total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: handlePrint,\n      children: \"Print\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeletePersonal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"server-m\",\n      children: [\"Server is not running .... \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-ani-server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dfp\",\n      children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"pername\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"dameg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.pername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.quantity,\n                value: updateData.quantity,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  quantity: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this) : i.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.price,\n                value: updateData.price,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  price: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this) : i.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.dameg,\n                value: updateData.dameg,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  dameg: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 25\n              }, this) : i.dameg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: i.timestamp,\n                value: updateData.timestamp,\n                onChange: e => setUpdateData({\n                  ...updateData,\n                  timestamp: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 25\n              }, this) : i.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: updateId === i._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"update-ch1\",\n                  onClick: updatePersonalItem,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"update-ch2\",\n                  onClick: cancelUpdate,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"update\",\n                onClick: () => handleUpdate(i._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, i._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DFP1, \"TDR23HRixrncifwFvASfLOBhwk8=\", false, function () {\n  return [useNavigate];\n});\n_c = DFP1;\nexport default DFP1;\n\n// import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// import BarChart from './BarChart';\n// // import Personal_1_logout from './Personal-1-logout';\n// import BackButton from './Backbutton';\n// import Weather from './Weather';\n// import DeletePersonal from './delettions';\n// import UpdatePersonal from './update';\n\n// export default function DFP1() {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Define loading state\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem('userID')) {\n//       navigate('/');\n\n//     }\n\n//   });\n\n//   useEffect(() => {\n//     fetch('/auth/personal1', {\n//       method: 'GET',\n//     })\n//       .then((res) => res.json())\n//       .then((responseData) => {\n//         console.log(responseData, 'userData');\n//         setData(responseData.data); // Assuming 'data' is the array you want to display\n//         setLoading(false); // Set loading to false once data is fetched\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []);\n\n//   const handlePrint = () => {\n//     window.print(); // Invoking browser's print dialog\n//   };\n\n//   const goTo = () => {\n//     navigate('/Fetchalldata1'); // This function takes you back to the previous page in the history stack\n//   };\n\n//   return (\n//     <div>\n\n//       {/* <button className=\"navbutton\">\n//       <Link className='navbutton' to=\"/home1\">\n//           Back\n//         </Link>\n//       </button> <span /> */}\n//        <BackButton />\n//        <button className='buttons' onClick={goTo}> Total </button>\n\n//       <button className='buttons' onClick={handlePrint}>Print</button> <span />\n//       <DeletePersonal />\n//       <UpdatePersonal />\n//       <Weather />\n//       {/* <Personal_1_logout /> */}\n\n//           <div>\n//       <div>\n//         {loading ? (\n//             <p className='server-m'>Server is not running ....  <p className='loading-ani-server'></p></p>\n\n//         ) : (\n//           <div>\n\n//             <h3 className='totl-data'>Received Data:</h3>\n//             {data && data.length > 0 ? (\n//               <table className=\"data-table\" border=\"\">\n//                 <thead>\n//                   <tr> <th>_id</th>\n//                     <th>pername</th>\n//                     <th>quantity</th>\n//                     <th>price</th>\n//                     <th>dameg</th>\n//                     <th>Timestamp</th>\n//                   </tr>\n//                 </thead>\n\n//                 <tbody>\n//                   {data.map((i) => (\n//                     <tr key={i._id}>\n//                       <td>{i._id}</td>\n//                       <td>{i.pername}</td>\n//                       <td>{i.quantity}</td>\n//                       <td>{i.price}</td>\n//                       <td>{i.dameg}</td>\n//                       <td>{i.timestamp}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n\n//             ) : (\n\n//               <p> No data available</p>\n//             )}\n\n//           </div>\n\n//         )}\n\n//         <BarChart data={data} />\n\n//       </div>\n//       </div>\n\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"DFP1\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BackButton","DeletePersonal","jsxDEV","_jsxDEV","Fragment","_Fragment","DFP1","_s","data","setData","loading","setLoading","updateId","setUpdateId","updateData","setUpdateData","quantity","price","dameg","timestamp","navigate","localStorage","getItem","fetchData","response","fetch","method","ok","responseData","json","console","error","statusText","handlePrint","window","print","goTo","handleUpdate","id","selectedItem","find","item","_id","cancelUpdate","updatePersonalItem","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","i","pername","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/DFP1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BackButton from \"./Backbutton\";\nimport DeletePersonal from \"./delettions\";\n\nconst DFP1 = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updateId, setUpdateId] = useState(null);\n  const [updateData, setUpdateData] = useState({\n    quantity: \"\",\n    price: \"\",\n    dameg: \"\",\n    timestamp: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"userID\")) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Fetch data on mount\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"/auth/personal1\", {\n        method: \"GET\",\n      });\n\n      if (response.ok) {\n        const responseData = await response.json();\n        setData(responseData.data);\n        setLoading(false);\n      } else {\n        console.error(\"Error fetching data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const goTo = () => {\n    navigate(\"/Fetchalldata1\");\n  };\n\n  const handleUpdate = (id) => {\n    setUpdateId(id);\n    const selectedItem = data.find((item) => item._id === id);\n    setUpdateData({\n      quantity: selectedItem.quantity,\n      price: selectedItem.price,\n      dameg: selectedItem.dameg,\n      timestamp: selectedItem.timestamp,\n    });\n  };\n\n  const cancelUpdate = () => {\n    setUpdateId(null);\n    setUpdateData({\n      quantity: \"\",\n      price: \"\",\n      dameg: \"\",\n      timestamp: \"\",\n    });\n  };\n\n  const updatePersonalItem = async () => {\n    try {\n      const response = await fetch(`/auth/personal1/${updateId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updateData),\n      });\n\n      if (response.ok) {\n        // Refresh data after updating\n        fetchData();\n\n        // Reset update state\n        cancelUpdate();\n      } else {\n        console.error(\"Error updating data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <BackButton />\n      <button className=\"buttons\" onClick={goTo}>\n        Total\n      </button>\n\n      <button className=\"buttons\" onClick={handlePrint}>\n        Print\n      </button>\n      <DeletePersonal />\n      {loading ? (\n        <p className=\"server-m\">\n          Server is not running .... <p className=\"loading-ani-server\"></p>\n        </p>\n      ) : (\n        <div className=\"dfp\">\n          {/* <h3 className='totl-data'>Received Data:</h3> */}\n          {data && data.length > 0 ? (\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>pername</th>\n                  <th>quantity</th>\n                  <th>price</th>\n                  <th>dameg</th>\n                  <th>Timestamp</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((i) => (\n                  <tr key={i._id}>\n                    <td>{i._id}</td>\n                    <td>{i.pername}</td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.quantity}\n                          value={updateData.quantity}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              quantity: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.quantity\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.price}\n                          value={updateData.price}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              price: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.price\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.dameg}\n                          value={updateData.dameg}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              dameg: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.dameg\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <input\n                          type=\"text\"\n                          placeholder={i.timestamp}\n                          value={updateData.timestamp}\n                          onChange={(e) =>\n                            setUpdateData({\n                              ...updateData,\n                              timestamp: e.target.value,\n                            })\n                          }\n                        />\n                      ) : (\n                        i.timestamp\n                      )}\n                    </td>\n                    <td>\n                      {updateId === i._id ? (\n                        <>\n                          <button\n                            className=\"update-ch1\"\n                            onClick={updatePersonalItem}\n                          >\n                            Save\n                          </button>\n                          <button className=\"update-ch2\" onClick={cancelUpdate}>\n                            Cancel\n                          </button>\n                        </>\n                      ) : (\n                        <button\n                          className=\"update\"\n                          onClick={() => handleUpdate(i._id)}\n                        >\n                          Update\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>No data available</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DFP1;\n\n// import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n// import BarChart from './BarChart';\n// // import Personal_1_logout from './Personal-1-logout';\n// import BackButton from './Backbutton';\n// import Weather from './Weather';\n// import DeletePersonal from './delettions';\n// import UpdatePersonal from './update';\n\n// export default function DFP1() {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true); // Define loading state\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!localStorage.getItem('userID')) {\n//       navigate('/');\n\n//     }\n\n//   });\n\n//   useEffect(() => {\n//     fetch('/auth/personal1', {\n//       method: 'GET',\n//     })\n//       .then((res) => res.json())\n//       .then((responseData) => {\n//         console.log(responseData, 'userData');\n//         setData(responseData.data); // Assuming 'data' is the array you want to display\n//         setLoading(false); // Set loading to false once data is fetched\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//       });\n//   }, []);\n\n//   const handlePrint = () => {\n//     window.print(); // Invoking browser's print dialog\n//   };\n\n//   const goTo = () => {\n//     navigate('/Fetchalldata1'); // This function takes you back to the previous page in the history stack\n//   };\n\n//   return (\n//     <div>\n\n//       {/* <button className=\"navbutton\">\n//       <Link className='navbutton' to=\"/home1\">\n//           Back\n//         </Link>\n//       </button> <span /> */}\n//        <BackButton />\n//        <button className='buttons' onClick={goTo}> Total </button>\n\n//       <button className='buttons' onClick={handlePrint}>Print</button> <span />\n//       <DeletePersonal />\n//       <UpdatePersonal />\n//       <Weather />\n//       {/* <Personal_1_logout /> */}\n\n//           <div>\n//       <div>\n//         {loading ? (\n//             <p className='server-m'>Server is not running ....  <p className='loading-ani-server'></p></p>\n\n//         ) : (\n//           <div>\n\n//             <h3 className='totl-data'>Received Data:</h3>\n//             {data && data.length > 0 ? (\n//               <table className=\"data-table\" border=\"\">\n//                 <thead>\n//                   <tr> <th>_id</th>\n//                     <th>pername</th>\n//                     <th>quantity</th>\n//                     <th>price</th>\n//                     <th>dameg</th>\n//                     <th>Timestamp</th>\n//                   </tr>\n//                 </thead>\n\n//                 <tbody>\n//                   {data.map((i) => (\n//                     <tr key={i._id}>\n//                       <td>{i._id}</td>\n//                       <td>{i.pername}</td>\n//                       <td>{i.quantity}</td>\n//                       <td>{i.price}</td>\n//                       <td>{i.dameg}</td>\n//                       <td>{i.timestamp}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n\n//             ) : (\n\n//               <p> No data available</p>\n//             )}\n\n//           </div>\n\n//         )}\n\n//         <BarChart data={data} />\n\n//       </div>\n//       </div>\n\n//     </div>\n//   );\n// }\n"],"mappings":"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,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAvOID,IAAI;EAAA,QAWSP,WAAW;AAAA;AAAAmE,EAAA,GAXxB5D,IAAI;AAyOV,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}