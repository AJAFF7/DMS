{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/BarChart-sub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChartsub = ({\n  data\n}) => {\n  _s();\n  const chartContainer = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy(); // Destroy the existing chart instance\n    }\n    if (data && data.length > 0) {\n      const ctx = chartContainer.current.getContext('2d');\n      chartInstance.current = new Chart(ctx, {\n        type: 'doughnut',\n        //doughnut\n        data: {\n          labels: data.map(item => item.pername),\n          // Assuming pername is the label\n          datasets: [{\n            label: 'Quantity',\n            data: data.map(item => item.quantity),\n            // Assuming quantity is the data point\n            backgroundColor: \"orangered\",\n            //'rgba(355, 138, 0, 0.8)',\n            borderColor: 'black',\n            //rgba(75, 192, 192, 1)\n            borderWidth: 1\n          }, {\n            label: 'Price',\n            data: data.map(item => item.price),\n            // Assuming price is the data point\n            backgroundColor: 'rgba(192, 75, 192, 0.2)',\n            borderColor: 'black',\n            //rgba(192, 75, 192, 1)\n            borderWidth: 1\n          }, {\n            label: 'Dameg',\n            data: data.map(item => item.dameg),\n            // Assuming dameg is the data point\n            backgroundColor: '#870613',\n            borderColor: 'black',\n            //rgba(192, 192, 75, 1)\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            },\n            x: {\n              ticks: {\n                callback: function (value, index, values) {\n                  const timestamp = data[index].timestamp;\n                  if (!isNaN(timestamp)) {\n                    const date = new Date(timestamp);\n                    return date.toLocaleString(); // Customize date format if needed\n                  }\n                  return '';\n                }\n              }\n            }\n          },\n          layout: {\n            padding: {\n              left: 10,\n              // Adjust the padding as needed\n              right: 10,\n              top: 20,\n              bottom: 20\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: true,\n          aspectRatio: 4.5 // Adjust aspect ratio as needed\n        }\n      });\n      chartContainer.current.width = 100; // Adjust width as needed\n      chartContainer.current.height = 100; // Adjust height as needed\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s(BarChartsub, \"zfSVHsY4aK/z5wP2g3vjt7nX4WI=\");\n_c = BarChartsub;\nexport default BarChartsub;\nvar _c;\n$RefreshReg$(_c, \"BarChartsub\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","BarChartsub","data","_s","chartContainer","chartInstance","current","destroy","length","ctx","getContext","type","labels","map","item","pername","datasets","label","quantity","backgroundColor","borderColor","borderWidth","price","dameg","options","scales","y","beginAtZero","x","ticks","callback","value","index","values","timestamp","isNaN","date","Date","toLocaleString","layout","padding","left","right","top","bottom","responsive","maintainAspectRatio","aspectRatio","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/All/DMS/client/src/Personal-1/BarChart-sub.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; \n\n\n    const BarChartsub = ({ data }) => {\n      const chartContainer = useRef(null);\n      const chartInstance = useRef(null);\n      useEffect(() => {\n        if (chartInstance.current) {\n          chartInstance.current.destroy(); // Destroy the existing chart instance\n        }\n\n \n    if (data && data.length > 0) {\n      const ctx = chartContainer.current.getContext('2d');\n      chartInstance.current =new Chart(ctx, {\n        type: 'doughnut', //doughnut\n        data: {\n            labels: data.map((item) => item.pername), // Assuming pername is the label\n            datasets: [\n              {\n                label: 'Quantity',\n                data: data.map((item) => item.quantity), // Assuming quantity is the data point\n                backgroundColor: \"orangered\" ,  //'rgba(355, 138, 0, 0.8)',\n                borderColor: 'black',  //rgba(75, 192, 192, 1)\n                borderWidth: 1,\n  \n              },\n       \n              {\n                label: 'Price',\n                data: data.map((item) => item.price), // Assuming price is the data point\n                backgroundColor: 'rgba(192, 75, 192, 0.2)',\n                borderColor: 'black', //rgba(192, 75, 192, 1)\n                borderWidth: 1,\n              },\n         \n              {\n                label: 'Dameg',\n                data: data.map((item) => item.dameg), // Assuming dameg is the data point\n                backgroundColor: '#870613',\n                borderColor: 'black',  //rgba(192, 192, 75, 1)\n                borderWidth: 1,\n              },\n              \n            ],\n            \n          },\n        options: {\n    \n\n       \n\n      scales: {\n        y: {\n            beginAtZero: true,\n        },\n        x: {\n          ticks: {\n            callback: function (value, index, values) {\n              const timestamp = data[index].timestamp ;\n              if (!isNaN(timestamp)) {\n              const date = new Date(timestamp);\n              return date.toLocaleString(); // Customize date format if needed\n              }\n\n              return '';\n            },\n          },\n        },\n      },\n\n\n\n       layout: {\n        padding: {\n          left: 10, // Adjust the padding as needed\n          right: 10,\n          top: 20,\n          bottom: 20,\n        },\n      \n      },\n      responsive: true,\n      maintainAspectRatio: true,\n      aspectRatio: 4.5, // Adjust aspect ratio as needed\n     \n\n   \n\n     },\n\n    \n\n\n      });\n\n      chartContainer.current.width = 100; // Adjust width as needed\n      chartContainer.current.height = 100; // Adjust height as needed\n    }\n  }, [data]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default BarChartsub;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}